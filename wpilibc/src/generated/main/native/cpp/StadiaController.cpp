// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

// THIS FILE WAS AUTO-GENERATED BY ./wpilibc/generate_hids.py. DO NOT MODIFY


#include "frc/StadiaController.h"

#include <hal/UsageReporting.h>
#include <wpi/sendable/SendableBuilder.h>

#include "frc/event/BooleanEvent.h"

using namespace frc;

StadiaController::StadiaController(int port) : GenericHID(port) {
  HAL_ReportUsage("HID", port, "StadiaController");
}

double StadiaController::GetLeftX() const {
  return GetRawAxis(Axis::LEFT_X);
}

double StadiaController::GetRightX() const {
  return GetRawAxis(Axis::RIGHT_X);
}

double StadiaController::GetLeftY() const {
  return GetRawAxis(Axis::LEFT_Y);
}

double StadiaController::GetRightY() const {
  return GetRawAxis(Axis::RIGHT_Y);
}

bool StadiaController::GetAButton() const {
  return GetRawButton(Button::A);
}

bool StadiaController::GetAButtonPressed() {
  return GetRawButtonPressed(Button::A);
}

bool StadiaController::GetAButtonReleased() {
  return GetRawButtonReleased(Button::A);
}

BooleanEvent StadiaController::A(EventLoop* loop) const {
  return BooleanEvent(loop, [this]() { return this->GetAButton(); });
}

bool StadiaController::GetBButton() const {
  return GetRawButton(Button::B);
}

bool StadiaController::GetBButtonPressed() {
  return GetRawButtonPressed(Button::B);
}

bool StadiaController::GetBButtonReleased() {
  return GetRawButtonReleased(Button::B);
}

BooleanEvent StadiaController::B(EventLoop* loop) const {
  return BooleanEvent(loop, [this]() { return this->GetBButton(); });
}

bool StadiaController::GetXButton() const {
  return GetRawButton(Button::X);
}

bool StadiaController::GetXButtonPressed() {
  return GetRawButtonPressed(Button::X);
}

bool StadiaController::GetXButtonReleased() {
  return GetRawButtonReleased(Button::X);
}

BooleanEvent StadiaController::X(EventLoop* loop) const {
  return BooleanEvent(loop, [this]() { return this->GetXButton(); });
}

bool StadiaController::GetYButton() const {
  return GetRawButton(Button::Y);
}

bool StadiaController::GetYButtonPressed() {
  return GetRawButtonPressed(Button::Y);
}

bool StadiaController::GetYButtonReleased() {
  return GetRawButtonReleased(Button::Y);
}

BooleanEvent StadiaController::Y(EventLoop* loop) const {
  return BooleanEvent(loop, [this]() { return this->GetYButton(); });
}

bool StadiaController::GetLeftBumperButton() const {
  return GetRawButton(Button::LEFT_BUMPER);
}

bool StadiaController::GetLeftBumperButtonPressed() {
  return GetRawButtonPressed(Button::LEFT_BUMPER);
}

bool StadiaController::GetLeftBumperButtonReleased() {
  return GetRawButtonReleased(Button::LEFT_BUMPER);
}

BooleanEvent StadiaController::LeftBumper(EventLoop* loop) const {
  return BooleanEvent(loop, [this]() { return this->GetLeftBumperButton(); });
}

bool StadiaController::GetRightBumperButton() const {
  return GetRawButton(Button::RIGHT_BUMPER);
}

bool StadiaController::GetRightBumperButtonPressed() {
  return GetRawButtonPressed(Button::RIGHT_BUMPER);
}

bool StadiaController::GetRightBumperButtonReleased() {
  return GetRawButtonReleased(Button::RIGHT_BUMPER);
}

BooleanEvent StadiaController::RightBumper(EventLoop* loop) const {
  return BooleanEvent(loop, [this]() { return this->GetRightBumperButton(); });
}

bool StadiaController::GetLeftStickButton() const {
  return GetRawButton(Button::LEFT_STICK);
}

bool StadiaController::GetLeftStickButtonPressed() {
  return GetRawButtonPressed(Button::LEFT_STICK);
}

bool StadiaController::GetLeftStickButtonReleased() {
  return GetRawButtonReleased(Button::LEFT_STICK);
}

BooleanEvent StadiaController::LeftStick(EventLoop* loop) const {
  return BooleanEvent(loop, [this]() { return this->GetLeftStickButton(); });
}

bool StadiaController::GetRightStickButton() const {
  return GetRawButton(Button::RIGHT_STICK);
}

bool StadiaController::GetRightStickButtonPressed() {
  return GetRawButtonPressed(Button::RIGHT_STICK);
}

bool StadiaController::GetRightStickButtonReleased() {
  return GetRawButtonReleased(Button::RIGHT_STICK);
}

BooleanEvent StadiaController::RightStick(EventLoop* loop) const {
  return BooleanEvent(loop, [this]() { return this->GetRightStickButton(); });
}

bool StadiaController::GetEllipsesButton() const {
  return GetRawButton(Button::ELLIPSES);
}

bool StadiaController::GetEllipsesButtonPressed() {
  return GetRawButtonPressed(Button::ELLIPSES);
}

bool StadiaController::GetEllipsesButtonReleased() {
  return GetRawButtonReleased(Button::ELLIPSES);
}

BooleanEvent StadiaController::Ellipses(EventLoop* loop) const {
  return BooleanEvent(loop, [this]() { return this->GetEllipsesButton(); });
}

bool StadiaController::GetHamburgerButton() const {
  return GetRawButton(Button::HAMBURGER);
}

bool StadiaController::GetHamburgerButtonPressed() {
  return GetRawButtonPressed(Button::HAMBURGER);
}

bool StadiaController::GetHamburgerButtonReleased() {
  return GetRawButtonReleased(Button::HAMBURGER);
}

BooleanEvent StadiaController::Hamburger(EventLoop* loop) const {
  return BooleanEvent(loop, [this]() { return this->GetHamburgerButton(); });
}

bool StadiaController::GetStadiaButton() const {
  return GetRawButton(Button::STADIA);
}

bool StadiaController::GetStadiaButtonPressed() {
  return GetRawButtonPressed(Button::STADIA);
}

bool StadiaController::GetStadiaButtonReleased() {
  return GetRawButtonReleased(Button::STADIA);
}

BooleanEvent StadiaController::Stadia(EventLoop* loop) const {
  return BooleanEvent(loop, [this]() { return this->GetStadiaButton(); });
}

bool StadiaController::GetRightTriggerButton() const {
  return GetRawButton(Button::RIGHT_TRIGGER);
}

bool StadiaController::GetRightTriggerButtonPressed() {
  return GetRawButtonPressed(Button::RIGHT_TRIGGER);
}

bool StadiaController::GetRightTriggerButtonReleased() {
  return GetRawButtonReleased(Button::RIGHT_TRIGGER);
}

BooleanEvent StadiaController::RightTrigger(EventLoop* loop) const {
  return BooleanEvent(loop, [this]() { return this->GetRightTriggerButton(); });
}

bool StadiaController::GetLeftTriggerButton() const {
  return GetRawButton(Button::LEFT_TRIGGER);
}

bool StadiaController::GetLeftTriggerButtonPressed() {
  return GetRawButtonPressed(Button::LEFT_TRIGGER);
}

bool StadiaController::GetLeftTriggerButtonReleased() {
  return GetRawButtonReleased(Button::LEFT_TRIGGER);
}

BooleanEvent StadiaController::LeftTrigger(EventLoop* loop) const {
  return BooleanEvent(loop, [this]() { return this->GetLeftTriggerButton(); });
}

bool StadiaController::GetGoogleButton() const {
  return GetRawButton(Button::GOOGLE);
}

bool StadiaController::GetGoogleButtonPressed() {
  return GetRawButtonPressed(Button::GOOGLE);
}

bool StadiaController::GetGoogleButtonReleased() {
  return GetRawButtonReleased(Button::GOOGLE);
}

BooleanEvent StadiaController::Google(EventLoop* loop) const {
  return BooleanEvent(loop, [this]() { return this->GetGoogleButton(); });
}

bool StadiaController::GetFrameButton() const {
  return GetRawButton(Button::FRAME);
}

bool StadiaController::GetFrameButtonPressed() {
  return GetRawButtonPressed(Button::FRAME);
}

bool StadiaController::GetFrameButtonReleased() {
  return GetRawButtonReleased(Button::FRAME);
}

BooleanEvent StadiaController::Frame(EventLoop* loop) const {
  return BooleanEvent(loop, [this]() { return this->GetFrameButton(); });
}

bool StadiaController::GetLeftBumper() const {
  return GetRawButton(Button::LEFT_BUMPER);
}

bool StadiaController::GetRightBumper() const {
  return GetRawButton(Button::RIGHT_BUMPER);
}

bool StadiaController::GetLeftBumperPressed() {
  return GetRawButtonPressed(Button::LEFT_BUMPER);
}

bool StadiaController::GetRightBumperPressed() {
  return GetRawButtonPressed(Button::RIGHT_BUMPER);
}

bool StadiaController::GetLeftBumperReleased() {
  return GetRawButtonReleased(Button::LEFT_BUMPER);
}

bool StadiaController::GetRightBumperReleased() {
  return GetRawButtonReleased(Button::RIGHT_BUMPER);
}

void StadiaController::InitSendable(wpi::SendableBuilder& builder) {
  builder.SetSmartDashboardType("HID");
  builder.PublishConstString("ControllerType", "Stadia");
  builder.AddDoubleProperty("LeftX", [this] { return GetLeftX(); }, nullptr);
  builder.AddDoubleProperty("RightX", [this] { return GetRightX(); }, nullptr);
  builder.AddDoubleProperty("LeftY", [this] { return GetLeftY(); }, nullptr);
  builder.AddDoubleProperty("RightY", [this] { return GetRightY(); }, nullptr);
  builder.AddBooleanProperty("A", [this] { return GetAButton(); }, nullptr);
  builder.AddBooleanProperty("B", [this] { return GetBButton(); }, nullptr);
  builder.AddBooleanProperty("X", [this] { return GetXButton(); }, nullptr);
  builder.AddBooleanProperty("Y", [this] { return GetYButton(); }, nullptr);
  builder.AddBooleanProperty("LeftBumper", [this] { return GetLeftBumperButton(); }, nullptr);
  builder.AddBooleanProperty("RightBumper", [this] { return GetRightBumperButton(); }, nullptr);
  builder.AddBooleanProperty("LeftStick", [this] { return GetLeftStickButton(); }, nullptr);
  builder.AddBooleanProperty("RightStick", [this] { return GetRightStickButton(); }, nullptr);
  builder.AddBooleanProperty("Ellipses", [this] { return GetEllipsesButton(); }, nullptr);
  builder.AddBooleanProperty("Hamburger", [this] { return GetHamburgerButton(); }, nullptr);
  builder.AddBooleanProperty("Stadia", [this] { return GetStadiaButton(); }, nullptr);
  builder.AddBooleanProperty("RightTrigger", [this] { return GetRightTriggerButton(); }, nullptr);
  builder.AddBooleanProperty("LeftTrigger", [this] { return GetLeftTriggerButton(); }, nullptr);
  builder.AddBooleanProperty("Google", [this] { return GetGoogleButton(); }, nullptr);
  builder.AddBooleanProperty("Frame", [this] { return GetFrameButton(); }, nullptr);
}