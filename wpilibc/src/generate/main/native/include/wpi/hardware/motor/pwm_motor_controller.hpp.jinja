// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

// THIS FILE WAS AUTO-GENERATED BY ./wpilibc/generate_pwm_motor_controllers.py. DO NOT MODIFY

#pragma once

#include "frc/motorcontrol/PWMMotorController.h"

namespace frc {

/**
 * {{ Manufacturer }} {{ DisplayName }} Motor Controller with PWM control.
 *
 * Note that the {{ DisplayName }} uses the following bounds for PWM values. These
 * values should work reasonably well for most controllers, but if users
 * experience issues such as asymmetric behavior around the deadband or
 * inability to saturate the controller in either direction, calibration is
 * recommended. The calibration procedure can be found in the {{ DisplayName }} User
 * Manual available from {{ Manufacturer }}.
 *
 * \li {{ "{:.3f}".format(pulse_width_ms.max) }}ms = full "forward"
 * \li {{ "{:.3f}".format(pulse_width_ms.deadbandMax) }}ms = the "high end" of the deadband range
 * \li {{ "{:.3f}".format(pulse_width_ms.center) }}ms = center of the deadband range (off)
 * \li {{ "{:.3f}".format(pulse_width_ms.deadbandMin) }}ms = the "low end" of the deadband range
 * \li {{ "{:.3f}".format(pulse_width_ms.min) }}ms = full "reverse"
 */
class {{ name }} : public PWMMotorController {
 public:
  /**
   * Constructor for a {{ DisplayName }} connected via PWM.
   *
   * @param channel The PWM channel that the {{ DisplayName }} is attached to. 0-9 are
   *                on-board, 10-19 are on the MXP port
   */
  explicit {{ name }}(int channel);

  {{ name }}({{ name }}&&) = default;
  {{ name }}& operator=({{ name }}&&) = default;
};

}  // namespace frc
