functions:
  format_as:
    ignore: true

classes:
  frc::Alert:
    enums:
      AlertType:
    methods:
      Alert:
        overloads:
          std::string_view, AlertType:
          std::string_view, std::string_view, AlertType:
      Set:
      Get:
      SetText:
      GetText:
      GetType:
    inline_code: |
      .def("close", [](frc::Alert &self) {
        py::gil_scoped_release release;
        self.Set(false);
      }, py::doc("Disables the alert"))
      .def("__enter__", [](frc::Alert &self) -> frc::Alert& {
        return self;
      })
      .def("__exit__", [](frc::Alert &self, py::args args) {
        py::gil_scoped_release release;
        self.Set(false);
      })
