name: Sanitizers

on: [pull_request, push]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  SCCACHE_WEBDAV_ENDPOINT: "https://frcmaven.wpi.edu/artifactory/wpilib-generic-cache-cmake-local"
  SCCACHE_WEBDAV_KEY_PREFIX: "sccache"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: asan
            cmake-flags: "-DCMAKE_BUILD_TYPE=Asan"
            ctest-env: ""
            ctest-flags: "-E 'wpilibc'"
          - name: tsan
            cmake-flags: "-DCMAKE_BUILD_TYPE=Tsan"
            ctest-env: "TSAN_OPTIONS=second_deadlock_stack=1"
            ctest-flags: "-E 'cscore|cameraserver|wpilibc|wpilibNewCommands'"
          - name: ubsan
            cmake-flags: "-DCMAKE_BUILD_TYPE=Ubsan"
            ctest-env: ""
            ctest-flags: ""
    name: "${{ matrix.name }}"
    runs-on: ubuntu-24.04
    container: wpilib/roborio-cross-ubuntu:2025-24.04
    steps:
      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y libopencv-dev libopencv-java clang-17 libprotobuf-dev protobuf-compiler ninja-build

      - name: Install sccache
        uses: mozilla-actions/sccache-action@v0.0.5

      - uses: actions/checkout@v4

      - name: configure
        run: mkdir build && cd build && cmake -G Ninja -DCMAKE_C_COMPILER_LAUNCHER=sccache -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -DCMAKE_C_COMPILER:FILEPATH=/usr/bin/clang-17 -DCMAKE_CXX_COMPILER:FILEPATH=/usr/bin/clang++-17 -DWITH_JAVA=OFF ${{ matrix.cmake-flags }} ..
        env:
          SCCACHE_WEBDAV_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          SCCACHE_WEBDAV_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: build
        working-directory: build
        run: cmake --build . --parallel $(nproc)
        env:
          SCCACHE_WEBDAV_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          SCCACHE_WEBDAV_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}

      - name: test
        working-directory: build
        run: ${{ matrix.ctest-env }} ctest --output-on-failure ${{ matrix.ctest-flags }}
