load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")
load("@rules_pkg//:mappings.bzl", "pkg_files")
load("@rules_python//python:pip.bzl", "compile_pip_requirements")
load("//shared/bazel/rules:publishing.bzl", "publish_all")

pkg_files(
    name = "license_pkg_files",
    srcs = [
        "LICENSE.md",
        "ThirdPartyNotices.txt",
    ],
    visibility = ["//visibility:public"],
)

# bazel build //:requirements.lock
compile_pip_requirements(
    name = "requirements",
    extra_args = ["--allow-unsafe"],
    requirements_in = "requirements.txt",
    requirements_txt = "requirements_lock.txt",
    # compile_pip_requirements does not respect target_compatible_with for some of the targets it generates under the hood
    tags = ["no-systemcore"],
)

alias(
    name = "quickbuf_protoc",
    actual = select({
        "@bazel_tools//src/conditions:windows": "@quickbuffer_protoc_windows//file",
        "@rules_bzlmodrio_toolchains//conditions:osx_aarch64": "@quickbuffer_protoc_osx_aarch64//file",
        "@rules_bzlmodrio_toolchains//conditions:osx_x86_64": "@quickbuffer_protoc_osx_x86-64//file",
        "@rules_bzlmodrio_toolchains//constraints/combined:is_linux": "@quickbuffer_protoc_linux//file",
    }),
    tags = ["pregeneration"],
    visibility = ["//visibility:public"],
)

# This is a helper to run all of the pregeneration scripts at once.
write_source_files(
    name = "write_all",
    additional_update_targets = [
        "//hal:write_hal",
        "//ntcore:write_ntcore",
        "//wpilibc:write_wpilibc",
        "//wpilibcExamples:write_example_project_list",
        "//wpilibj:write_wpilibj",
        "//wpilibjExamples:write_example_project_list",
        "//wpilibNewCommands:write_wpilib_new_commands",
        "//wpimath:write_wpimath",
        "//wpiunits:write_wpiunits",
        "//wpiutil:write_wpiutil",
    ],
    tags = ["pregeneration"],
)

publish_all(
    name = "publish",
    targets = [
        "//apriltag:apriltag-cpp_publish",
        "//apriltag:apriltag-java_publish",
        "//cameraserver:cameraserver-cpp_publish",
        "//cameraserver:cameraserver-java_publish",
        "//cscore:cscore-cpp_publish",
        "//cscore:cscore-java_publish",
        "//datalog:datalog-cpp_publish",
        "//datalog:datalog-java_publish",
        "//fieldImages:fieldImages-cpp_publish",
        "//fieldImages:fieldImages-java_publish",
        "//epilogue-runtime:epilogue-java_publish",
        "//epilogue-processor:processor-java_publish",
        "//glass:libglass-cpp_publish",
        "//glass:libglassnt-cpp_publish",
        "//hal:wpiHal-cpp_publish",
        "//hal:hal-java_publish",
        "//ntcore:ntcore-cpp_publish",
        "//ntcore:ntcore-java_publish",
        "//romiVendordep:romiVendordep-cpp_publish",
        "//romiVendordep:romiVendordep-java_publish",
        "//simulation/halsim_ds_socket:halsim_ds_socket-cpp_publish",
        "//simulation/halsim_gui:halsim_gui-cpp_publish",
        "//simulation/halsim_ws_client:halsim_ws_client-cpp_publish",
        "//simulation/halsim_ws_core:halsim_ws_core-cpp_publish",
        "//simulation/halsim_ws_server:halsim_ws_server-cpp_publish",
        "//simulation/halsim_xrp:halsim_xrp-cpp_publish",
        "//thirdparty/googletest:googletest-cpp_publish",
        "//thirdparty/imgui_suite:imgui-cpp_publish",
        "//wpigui:wpigui-cpp_publish",
        "//wpilibc:wpilibc-cpp_publish",
        "//wpilibj:wpilibj-java_publish",
        "//wpilibNewCommands:wpilibNewCommands-cpp_publish",
        "//wpilibNewCommands:wpilibNewCommands-java_publish",
        "//wpimath:wpimath-cpp_publish",
        "//wpimath:wpimath-java_publish",
        "//wpinet:wpinet-cpp_publish",
        "//wpinet:wpinet-java_publish",
        "//wpiunits:wpiunits-java_publish",
        "//wpiutil:wpiutil-cpp_publish",
        "//wpiutil:wpiutil-java_publish",
        "//xrpVendordep:xrpVendordep-cpp_publish",
        "//xrpVendordep:xrpVendordep-java_publish",
    ],
)
