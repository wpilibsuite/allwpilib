strip_prefixes:
- HALSIM_

functions:
  HALSIM_ResetRoboRioData:
  HALSIM_RegisterRoboRioFPGAButtonCallback:
    ignore: true
  HALSIM_CancelRoboRioFPGAButtonCallback:
    ignore: true
  HALSIM_GetRoboRioFPGAButton:
    ignore: true
  HALSIM_SetRoboRioFPGAButton:
    ignore: true
  HALSIM_RegisterRoboRioVInVoltageCallback:
    ignore: true
  HALSIM_CancelRoboRioVInVoltageCallback:
  HALSIM_GetRoboRioVInVoltage:
  HALSIM_SetRoboRioVInVoltage:
  HALSIM_RegisterRoboRioUserVoltage3V3Callback:
    ignore: true
  HALSIM_CancelRoboRioUserVoltage3V3Callback:
  HALSIM_GetRoboRioUserVoltage3V3:
  HALSIM_SetRoboRioUserVoltage3V3:
  HALSIM_RegisterRoboRioUserCurrent3V3Callback:
    ignore: true
  HALSIM_CancelRoboRioUserCurrent3V3Callback:
  HALSIM_GetRoboRioUserCurrent3V3:
  HALSIM_SetRoboRioUserCurrent3V3:
  HALSIM_RegisterRoboRioUserActive3V3Callback:
    ignore: true
  HALSIM_CancelRoboRioUserActive3V3Callback:
  HALSIM_GetRoboRioUserActive3V3:
  HALSIM_SetRoboRioUserActive3V3:
  HALSIM_RegisterRoboRioUserFaults3V3Callback:
    ignore: true
  HALSIM_CancelRoboRioUserFaults3V3Callback:
  HALSIM_GetRoboRioUserFaults3V3:
  HALSIM_SetRoboRioUserFaults3V3:
  HALSIM_RegisterRoboRioBrownoutVoltageCallback:
    ignore: true
  HALSIM_CancelRoboRioBrownoutVoltageCallback:
  HALSIM_GetRoboRioBrownoutVoltage:
  HALSIM_SetRoboRioBrownoutVoltage:
  HALSIM_RegisterRoboRioTeamNumberCallback:
    ignore: true
  HALSIM_CancelRoboRioTeamNumberCallback:
  HALSIM_GetRoboRioTeamNumber:
  HALSIM_SetRoboRioTeamNumber:
  HALSIM_RegisterRoboRioSerialNumberCallback:
    ignore: true
  HALSIM_CancelRoboRioSerialNumberCallback:
  HALSIM_GetRoboRioSerialNumber:
    param_override:
      serialNumber:
        ignore: true
    cpp_code: |
      []() {
        WPI_String s;
        HALSIM_GetRoboRioSerialNumber(&s);
        std::string ss(wpi::to_string_view(&s));
        WPI_FreeString(&s);
        return ss;
      }
  HALSIM_SetRoboRioSerialNumber:
    cpp_code: |
      [](std::string_view sv) {
        auto s = wpi::make_string(sv);
        HALSIM_SetRoboRioSerialNumber(&s);
      }
  HALSIM_RegisterRoboRioCommentsCallback:
    ignore: true
  HALSIM_CancelRoboRioCommentsCallback:
  HALSIM_GetRoboRioComments:
    param_override:
      comments:
        ignore: true
    cpp_code: |
      []() {
        WPI_String s;
        HALSIM_GetRoboRioComments(&s);
        std::string ss(wpi::to_string_view(&s));
        WPI_FreeString(&s);
        return ss;
      }
  HALSIM_SetRoboRioComments:
    cpp_code: |
      [](std::string_view sv) {
        auto s = wpi::make_string(sv);
        HALSIM_SetRoboRioComments(&s);
      }
  HALSIM_RegisterRoboRioAllCallbacks:
    ignore: true
  HALSIM_RegisterRoboRioCPUTempCallback:
    ignore: true
  HALSIM_CancelRoboRioCPUTempCallback:
  HALSIM_GetRoboRioCPUTemp:
  HALSIM_SetRoboRioCPUTemp:
