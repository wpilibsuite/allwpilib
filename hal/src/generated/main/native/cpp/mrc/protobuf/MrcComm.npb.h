// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.
/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9 */

#ifndef PB_MRC_PROTO_MRCCOMM_NPB_H_INCLUDED
#define PB_MRC_PROTO_MRCCOMM_NPB_H_INCLUDED
#include <pb.h>
#include <span>
#include <string_view>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _mrc_proto_ProtobufJoystickData {
    static const pb_msgdesc_t* msg_descriptor(void) noexcept;
    static std::string_view msg_name(void) noexcept;
    static pb_filedesc_t file_descriptor(void) noexcept;

    uint32_t ButtonCount;
    uint32_t Buttons;
    pb_callback_t Axes;
    pb_callback_t POVs;
} mrc_proto_ProtobufJoystickData;

typedef struct _mrc_proto_ProtobufControlData {
    static const pb_msgdesc_t* msg_descriptor(void) noexcept;
    static std::string_view msg_name(void) noexcept;
    static pb_filedesc_t file_descriptor(void) noexcept;

    uint32_t ControlWord;
    float MatchTime;
    pb_callback_t Joysticks;
    pb_callback_t OpMode;
} mrc_proto_ProtobufControlData;

typedef struct _mrc_proto_ProtobufJoystickDescriptor {
    static const pb_msgdesc_t* msg_descriptor(void) noexcept;
    static std::string_view msg_name(void) noexcept;
    static pb_filedesc_t file_descriptor(void) noexcept;

    pb_callback_t JoystickName;
    pb_callback_t AxisTypes;
    bool IsXbox;
    int32_t JoystickType;
    int32_t ButtonCount;
    int32_t PovCount;
} mrc_proto_ProtobufJoystickDescriptor;

typedef struct _mrc_proto_ProtobufJoystickOutputData {
    static const pb_msgdesc_t* msg_descriptor(void) noexcept;
    static std::string_view msg_name(void) noexcept;
    static pb_filedesc_t file_descriptor(void) noexcept;

    uint32_t HidOutputs;
    float LeftRumble;
    float RightRumble;
} mrc_proto_ProtobufJoystickOutputData;

typedef struct _mrc_proto_ProtobufVersionInfo {
    static const pb_msgdesc_t* msg_descriptor(void) noexcept;
    static std::string_view msg_name(void) noexcept;
    static pb_filedesc_t file_descriptor(void) noexcept;

    uint32_t DeviceId;
    pb_callback_t Name;
    pb_callback_t Version;
} mrc_proto_ProtobufVersionInfo;

typedef struct _mrc_proto_ProtobufMatchInfo {
    static const pb_msgdesc_t* msg_descriptor(void) noexcept;
    static std::string_view msg_name(void) noexcept;
    static pb_filedesc_t file_descriptor(void) noexcept;

    pb_callback_t EventName;
    int32_t MatchNumber;
    int32_t ReplayNumber;
    int32_t MatchType;
} mrc_proto_ProtobufMatchInfo;

typedef struct _mrc_proto_ProtobufErrorInfo {
    static const pb_msgdesc_t* msg_descriptor(void) noexcept;
    static std::string_view msg_name(void) noexcept;
    static pb_filedesc_t file_descriptor(void) noexcept;

    bool IsError;
    int32_t ErrorCode;
    pb_callback_t Details;
    pb_callback_t Location;
    pb_callback_t CallStack;
} mrc_proto_ProtobufErrorInfo;


/* Initializer values for message structs */
#define mrc_proto_ProtobufJoystickData_init_default {0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define mrc_proto_ProtobufControlData_init_default {0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define mrc_proto_ProtobufJoystickDescriptor_init_default {{{NULL}, NULL}, {{NULL}, NULL}, 0, 0, 0, 0}
#define mrc_proto_ProtobufJoystickOutputData_init_default {0, 0, 0}
#define mrc_proto_ProtobufVersionInfo_init_default {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define mrc_proto_ProtobufMatchInfo_init_default {{{NULL}, NULL}, 0, 0, 0}
#define mrc_proto_ProtobufErrorInfo_init_default {0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define mrc_proto_ProtobufJoystickData_init_zero {0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define mrc_proto_ProtobufControlData_init_zero  {0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define mrc_proto_ProtobufJoystickDescriptor_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, 0, 0, 0, 0}
#define mrc_proto_ProtobufJoystickOutputData_init_zero {0, 0, 0}
#define mrc_proto_ProtobufVersionInfo_init_zero  {0, {{NULL}, NULL}, {{NULL}, NULL}}
#define mrc_proto_ProtobufMatchInfo_init_zero    {{{NULL}, NULL}, 0, 0, 0}
#define mrc_proto_ProtobufErrorInfo_init_zero    {0, 0, {{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define mrc_proto_ProtobufJoystickData_ButtonCount_tag 1
#define mrc_proto_ProtobufJoystickData_Buttons_tag 2
#define mrc_proto_ProtobufJoystickData_Axes_tag  3
#define mrc_proto_ProtobufJoystickData_POVs_tag  4
#define mrc_proto_ProtobufControlData_ControlWord_tag 1
#define mrc_proto_ProtobufControlData_MatchTime_tag 2
#define mrc_proto_ProtobufControlData_Joysticks_tag 3
#define mrc_proto_ProtobufControlData_OpMode_tag 4
#define mrc_proto_ProtobufJoystickDescriptor_JoystickName_tag 1
#define mrc_proto_ProtobufJoystickDescriptor_AxisTypes_tag 2
#define mrc_proto_ProtobufJoystickDescriptor_IsXbox_tag 3
#define mrc_proto_ProtobufJoystickDescriptor_JoystickType_tag 4
#define mrc_proto_ProtobufJoystickDescriptor_ButtonCount_tag 5
#define mrc_proto_ProtobufJoystickDescriptor_PovCount_tag 6
#define mrc_proto_ProtobufJoystickOutputData_HidOutputs_tag 1
#define mrc_proto_ProtobufJoystickOutputData_LeftRumble_tag 2
#define mrc_proto_ProtobufJoystickOutputData_RightRumble_tag 3
#define mrc_proto_ProtobufVersionInfo_DeviceId_tag 1
#define mrc_proto_ProtobufVersionInfo_Name_tag   2
#define mrc_proto_ProtobufVersionInfo_Version_tag 3
#define mrc_proto_ProtobufMatchInfo_EventName_tag 1
#define mrc_proto_ProtobufMatchInfo_MatchNumber_tag 2
#define mrc_proto_ProtobufMatchInfo_ReplayNumber_tag 3
#define mrc_proto_ProtobufMatchInfo_MatchType_tag 4
#define mrc_proto_ProtobufErrorInfo_IsError_tag  1
#define mrc_proto_ProtobufErrorInfo_ErrorCode_tag 2
#define mrc_proto_ProtobufErrorInfo_Details_tag  3
#define mrc_proto_ProtobufErrorInfo_Location_tag 4
#define mrc_proto_ProtobufErrorInfo_CallStack_tag 5

/* Struct field encoding specification for nanopb */
#define mrc_proto_ProtobufJoystickData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   ButtonCount,       1) \
X(a, STATIC,   SINGULAR, FIXED32,  Buttons,           2) \
X(a, CALLBACK, REPEATED, FLOAT,    Axes,              3) \
X(a, CALLBACK, REPEATED, SINT32,   POVs,              4)
#define mrc_proto_ProtobufJoystickData_CALLBACK pb_default_field_callback
#define mrc_proto_ProtobufJoystickData_DEFAULT NULL

#define mrc_proto_ProtobufControlData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   ControlWord,       1) \
X(a, STATIC,   SINGULAR, FLOAT,    MatchTime,         2) \
X(a, CALLBACK, REPEATED, MESSAGE,  Joysticks,         3) \
X(a, CALLBACK, SINGULAR, STRING,   OpMode,            4)
#define mrc_proto_ProtobufControlData_CALLBACK pb_default_field_callback
#define mrc_proto_ProtobufControlData_DEFAULT NULL
#define mrc_proto_ProtobufControlData_Joysticks_MSGTYPE mrc_proto_ProtobufJoystickData

#define mrc_proto_ProtobufJoystickDescriptor_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   JoystickName,      1) \
X(a, CALLBACK, REPEATED, INT32,    AxisTypes,         2) \
X(a, STATIC,   SINGULAR, BOOL,     IsXbox,            3) \
X(a, STATIC,   SINGULAR, INT32,    JoystickType,      4) \
X(a, STATIC,   SINGULAR, INT32,    ButtonCount,       5) \
X(a, STATIC,   SINGULAR, INT32,    PovCount,          6)
#define mrc_proto_ProtobufJoystickDescriptor_CALLBACK pb_default_field_callback
#define mrc_proto_ProtobufJoystickDescriptor_DEFAULT NULL

#define mrc_proto_ProtobufJoystickOutputData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED32,  HidOutputs,        1) \
X(a, STATIC,   SINGULAR, FLOAT,    LeftRumble,        2) \
X(a, STATIC,   SINGULAR, FLOAT,    RightRumble,       3)
#define mrc_proto_ProtobufJoystickOutputData_CALLBACK NULL
#define mrc_proto_ProtobufJoystickOutputData_DEFAULT NULL

#define mrc_proto_ProtobufVersionInfo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED32,  DeviceId,          1) \
X(a, CALLBACK, SINGULAR, STRING,   Name,              2) \
X(a, CALLBACK, SINGULAR, STRING,   Version,           3)
#define mrc_proto_ProtobufVersionInfo_CALLBACK pb_default_field_callback
#define mrc_proto_ProtobufVersionInfo_DEFAULT NULL

#define mrc_proto_ProtobufMatchInfo_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   EventName,         1) \
X(a, STATIC,   SINGULAR, INT32,    MatchNumber,       2) \
X(a, STATIC,   SINGULAR, INT32,    ReplayNumber,      3) \
X(a, STATIC,   SINGULAR, INT32,    MatchType,         4)
#define mrc_proto_ProtobufMatchInfo_CALLBACK pb_default_field_callback
#define mrc_proto_ProtobufMatchInfo_DEFAULT NULL

#define mrc_proto_ProtobufErrorInfo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     IsError,           1) \
X(a, STATIC,   SINGULAR, SINT32,   ErrorCode,         2) \
X(a, CALLBACK, SINGULAR, STRING,   Details,           3) \
X(a, CALLBACK, SINGULAR, STRING,   Location,          4) \
X(a, CALLBACK, SINGULAR, STRING,   CallStack,         5)
#define mrc_proto_ProtobufErrorInfo_CALLBACK pb_default_field_callback
#define mrc_proto_ProtobufErrorInfo_DEFAULT NULL

/* Maximum encoded size of messages (where known) */
/* mrc_proto_ProtobufJoystickData_size depends on runtime parameters */
/* mrc_proto_ProtobufControlData_size depends on runtime parameters */
/* mrc_proto_ProtobufJoystickDescriptor_size depends on runtime parameters */
/* mrc_proto_ProtobufVersionInfo_size depends on runtime parameters */
/* mrc_proto_ProtobufMatchInfo_size depends on runtime parameters */
/* mrc_proto_ProtobufErrorInfo_size depends on runtime parameters */
#define MRC_PROTO_MRCCOMM_NPB_H_MAX_SIZE         mrc_proto_ProtobufJoystickOutputData_size
#define mrc_proto_ProtobufJoystickOutputData_size 15


#endif
