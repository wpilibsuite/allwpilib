// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

// THIS FILE WAS AUTO-GENERATED BY ./commandsv2/generate_hids.py. DO NOT MODIFY

#include "wpi/commands2/button/CommandXboxController.hpp"

using namespace wpi::cmd;

CommandXboxController::CommandXboxController(int port)
    : CommandGenericHID(port), m_hid{wpi::XboxController(port)} {}

wpi::XboxController& CommandXboxController::GetHID() {
  return m_hid;
}

Trigger CommandXboxController::A(wpi::EventLoop* loop) const {
  return Button(wpi::XboxController::Button::kA, loop);
}

Trigger CommandXboxController::B(wpi::EventLoop* loop) const {
  return Button(wpi::XboxController::Button::kB, loop);
}

Trigger CommandXboxController::X(wpi::EventLoop* loop) const {
  return Button(wpi::XboxController::Button::kX, loop);
}

Trigger CommandXboxController::Y(wpi::EventLoop* loop) const {
  return Button(wpi::XboxController::Button::kY, loop);
}

Trigger CommandXboxController::LeftBumper(wpi::EventLoop* loop) const {
  return Button(wpi::XboxController::Button::kLeftBumper, loop);
}

Trigger CommandXboxController::RightBumper(wpi::EventLoop* loop) const {
  return Button(wpi::XboxController::Button::kRightBumper, loop);
}

Trigger CommandXboxController::Back(wpi::EventLoop* loop) const {
  return Button(wpi::XboxController::Button::kBack, loop);
}

Trigger CommandXboxController::Start(wpi::EventLoop* loop) const {
  return Button(wpi::XboxController::Button::kStart, loop);
}

Trigger CommandXboxController::LeftStick(wpi::EventLoop* loop) const {
  return Button(wpi::XboxController::Button::kLeftStick, loop);
}

Trigger CommandXboxController::RightStick(wpi::EventLoop* loop) const {
  return Button(wpi::XboxController::Button::kRightStick, loop);
}

Trigger CommandXboxController::LeftTrigger(double threshold,
                                           wpi::EventLoop* loop) const {
  return Trigger(loop, [this, threshold] {
    return m_hid.GetLeftTriggerAxis() > threshold;
  });
}

Trigger CommandXboxController::RightTrigger(double threshold,
                                           wpi::EventLoop* loop) const {
  return Trigger(loop, [this, threshold] {
    return m_hid.GetRightTriggerAxis() > threshold;
  });
}

double CommandXboxController::GetLeftX() const {
  return m_hid.GetLeftX();
}

double CommandXboxController::GetRightX() const {
  return m_hid.GetRightX();
}

double CommandXboxController::GetLeftY() const {
  return m_hid.GetLeftY();
}

double CommandXboxController::GetRightY() const {
  return m_hid.GetRightY();
}

double CommandXboxController::GetLeftTriggerAxis() const {
  return m_hid.GetLeftTriggerAxis();
}

double CommandXboxController::GetRightTriggerAxis() const {
  return m_hid.GetRightTriggerAxis();
}
