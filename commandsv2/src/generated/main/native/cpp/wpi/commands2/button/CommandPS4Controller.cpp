// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

// THIS FILE WAS AUTO-GENERATED BY ./commandsv2/generate_hids.py. DO NOT MODIFY

#include "wpi/commands2/button/CommandPS4Controller.hpp"

using namespace wpi::cmd;

CommandPS4Controller::CommandPS4Controller(int port)
    : CommandGenericHID(port), m_hid{wpi::PS4Controller(port)} {}

wpi::PS4Controller& CommandPS4Controller::GetHID() {
  return m_hid;
}

Trigger CommandPS4Controller::Square(wpi::EventLoop* loop) const {
  return Button(wpi::PS4Controller::Button::kSquare, loop);
}

Trigger CommandPS4Controller::Cross(wpi::EventLoop* loop) const {
  return Button(wpi::PS4Controller::Button::kCross, loop);
}

Trigger CommandPS4Controller::Circle(wpi::EventLoop* loop) const {
  return Button(wpi::PS4Controller::Button::kCircle, loop);
}

Trigger CommandPS4Controller::Triangle(wpi::EventLoop* loop) const {
  return Button(wpi::PS4Controller::Button::kTriangle, loop);
}

Trigger CommandPS4Controller::L1(wpi::EventLoop* loop) const {
  return Button(wpi::PS4Controller::Button::kL1, loop);
}

Trigger CommandPS4Controller::R1(wpi::EventLoop* loop) const {
  return Button(wpi::PS4Controller::Button::kR1, loop);
}

Trigger CommandPS4Controller::L2(wpi::EventLoop* loop) const {
  return Button(wpi::PS4Controller::Button::kL2, loop);
}

Trigger CommandPS4Controller::R2(wpi::EventLoop* loop) const {
  return Button(wpi::PS4Controller::Button::kR2, loop);
}

Trigger CommandPS4Controller::Share(wpi::EventLoop* loop) const {
  return Button(wpi::PS4Controller::Button::kShare, loop);
}

Trigger CommandPS4Controller::Options(wpi::EventLoop* loop) const {
  return Button(wpi::PS4Controller::Button::kOptions, loop);
}

Trigger CommandPS4Controller::L3(wpi::EventLoop* loop) const {
  return Button(wpi::PS4Controller::Button::kL3, loop);
}

Trigger CommandPS4Controller::R3(wpi::EventLoop* loop) const {
  return Button(wpi::PS4Controller::Button::kR3, loop);
}

Trigger CommandPS4Controller::PS(wpi::EventLoop* loop) const {
  return Button(wpi::PS4Controller::Button::kPS, loop);
}

Trigger CommandPS4Controller::Touchpad(wpi::EventLoop* loop) const {
  return Button(wpi::PS4Controller::Button::kTouchpad, loop);
}

double CommandPS4Controller::GetLeftX() const {
  return m_hid.GetLeftX();
}

double CommandPS4Controller::GetLeftY() const {
  return m_hid.GetLeftY();
}

double CommandPS4Controller::GetRightX() const {
  return m_hid.GetRightX();
}

double CommandPS4Controller::GetRightY() const {
  return m_hid.GetRightY();
}

double CommandPS4Controller::GetL2Axis() const {
  return m_hid.GetL2Axis();
}

double CommandPS4Controller::GetR2Axis() const {
  return m_hid.GetR2Axis();
}
