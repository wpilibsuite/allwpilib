diff --git a/libraries/cpp/opencv/BUILD.bazel b/libraries/cpp/opencv/BUILD.bazel
index cd158e6..848735d 100644
--- a/libraries/cpp/opencv/BUILD.bazel
+++ b/libraries/cpp/opencv/BUILD.bazel
@@ -1,9 +1,3 @@
-alias(
-    name = "opencv",
-    actual = ":shared",
-    visibility = ["//visibility:public"],
-)
-
 alias(
     name = "header_files",
     actual = "@bzlmodrio-opencv//private/cpp/opencv:header_files",
@@ -11,25 +5,7 @@ alias(
 )
 
 alias(
-    name = "static",
-    actual = "@bzlmodrio-opencv//private/cpp/opencv:static",
-    visibility = ["//visibility:public"],
-)
-
-alias(
-    name = "shared",
-    actual = "@bzlmodrio-opencv//private/cpp/opencv:shared",
-    visibility = ["//visibility:public"],
-)
-
-alias(
-    name = "shared_raw",
-    actual = "@bzlmodrio-opencv//private/cpp/opencv:shared_raw",
-    visibility = ["//visibility:public"],
-)
-
-alias(
-    name = "jni",
-    actual = "@bzlmodrio-opencv//private/cpp/opencv:jni",
+    name = "opencv",
+    actual = "@bzlmodrio-opencv//private/cpp/opencv",
     visibility = ["//visibility:public"],
 )
diff --git a/libraries/cpp/opencv/libraries.bzl b/libraries/cpp/opencv/libraries.bzl
new file mode 100644
index 0000000..ad36579
--- /dev/null
+++ b/libraries/cpp/opencv/libraries.bzl
@@ -0,0 +1,3 @@
+load("//private/cpp/opencv:wrapped_cc_import.bzl", _opencv_libraries = "opencv_libraries")
+
+opencv_shared_libraries = ["@bzlmodrio-opencv//private/cpp/opencv:" + lib + "_shared" for lib in _opencv_libraries]
diff --git a/libraries/java/opencv/BUILD.bazel b/libraries/java/opencv/BUILD.bazel
index 8394b52..50551ce 100644
--- a/libraries/java/opencv/BUILD.bazel
+++ b/libraries/java/opencv/BUILD.bazel
@@ -4,7 +4,8 @@ java_import(
     name = "opencv",
     jars = ["@edu_wpi_first_thirdparty_frc2025_opencv_opencv_java//jar:file"],
     visibility = ["//visibility:public"],
-    deps = [
-        "@bzlmodrio-opencv//libraries/cpp/opencv:jni",
-    ],
+    # TODO(austin): Did this do anything before?
+    #deps = [
+        #"@bzlmodrio-opencv//libraries/cpp/opencv:jni",
+    #],
 )
diff --git a/maven_cpp_deps.bzl b/maven_cpp_deps.bzl
index 73a5e7f..2debe30 100644
--- a/maven_cpp_deps.bzl
+++ b/maven_cpp_deps.bzl
@@ -1,5 +1,6 @@
 load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
 load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
+load("@bazel_tools//tools/build_defs/repo:cache.bzl", "get_default_canonical_id")
 
 cc_library_headers = """cc_library(
     name = "headers",
@@ -22,6 +23,121 @@ cc_library_sources = """filegroup(
  )
  """
 
+shared_build_content = """load("@rules_cc//cc:defs.bzl", "cc_library", "cc_shared_library")
+load("@bzlmodrio-opencv//private/cpp/opencv:wrapped_cc_import.bzl", "wrapped_cc_import")
+load("@bzlmodrio-opencv//private/cpp/opencv:wrapped_cc_import.bzl", "cc_import_name")
+
+shared_srcs = glob([
+        "**/*.dll",
+        "**/*.so*",
+        "**/*.dylib",
+    ],
+    allow_empty = True,
+)
+
+[ wrapped_cc_import(
+    x,
+    "%static_name",
+    hdrs = ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_headers//:header_files"],
+    includes = ["."]
+) for x in shared_srcs ]
+
+# Create the static aggregator library.
+cc_library(
+    name = "static",
+    deps = [":" + cc_import_name(x) for x in shared_srcs] + [
+        "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_headers//:headers",
+    ],
+    visibility = ["//visibility:public"],
+)
+"""
+
+static_build_content = """load("@bzlmodrio-opencv//private/cpp/opencv:wrapped_cc_import.bzl", "static_alias")
+
+exports_files(glob(["**"]))
+
+libraries = glob(["**/*.lib", "**/*.a"], allow_empty=True)
+
+static_alias(
+    name = "static_library_file",
+    libraries = libraries,
+    visibility = ["//visibility:public"],
+)
+"""
+
+def _update_integrity_attr(ctx, attrs, download_info):
+    if ctx.attr.sha256:
+        return ctx.repo_metadata(reproducible = True)
+
+    fail('sha256 required for', ctx.label)
+
+_download_and_generate_attrs = {
+    "url": attr.string(),
+    "sha256": attr.string(),
+    "integrity": attr.string(),
+    "static_repository_name": attr.string(),
+  }
+
+def _download_and_generate_impl(rctx):
+  urls = [rctx.attr.url]
+
+  rctx.download_and_extract(
+    url=urls,
+    sha256 = rctx.attr.sha256,
+    canonical_id = get_default_canonical_id(rctx, urls),
+  )
+
+  rctx.file("WORKSPACE", "")
+
+  rctx.file("BUILD.bazel", shared_build_content.replace("%static_name", rctx.attr.static_repository_name))
+  rctx.file("libs.bzl", """load("@bzlmodrio-opencv//private/cpp/opencv:wrapped_cc_import.bzl", "cc_import_name")
+shared_srcs = glob([
+        "**/*.dll",
+        "**/*.so*",
+        "**/*.dylib",
+    ],
+    allow_empty = True,
+)
+
+shared_libraries = [ cc_import_name(x) for x in shared_srcs ]
+""")
+
+  if rctx.attr.sha256:
+        return rctx.repo_metadata(reproducible = True)
+
+  fail('sha256 required for', rctx.label)
+
+_download_and_generate = repository_rule(
+  implementation = _download_and_generate_impl,
+  attrs = _download_and_generate_attrs,
+)
+
+def __static_shared_pair(mctx, name, shared_sha256, static_sha256):
+    shared_name = name
+    if name.endswith('debug'):
+        static_name = name[:-5] + 'staticdebug'
+    else:
+        static_name = name + 'static'
+
+    shared_url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-" + shared_name + ".zip"
+    static_url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-" + static_name + ".zip"
+    static_repository_name = "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_" + static_name
+    shared_repository_name = "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_" + shared_name
+    maybe(
+        http_archive,
+        static_repository_name,
+        url = static_url,
+        sha256 = static_sha256,
+        build_file_content = static_build_content,
+    )
+    maybe(
+        _download_and_generate,
+        shared_repository_name,
+        url = shared_url,
+        sha256 = shared_sha256,
+        static_repository_name= static_repository_name,
+    )
+
 def __setup_bzlmodrio_opencv_cpp_dependencies(mctx):
     maybe(
         http_archive,
@@ -37,313 +153,137 @@ def __setup_bzlmodrio_opencv_cpp_dependencies(mctx):
         sha256 = "894d273ee8eece2e1f588aad8e7cf61f56a900279c864433984bd5299a31776c",
         build_file_content = cc_library_sources,
     )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxathena",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxathena.zip",
-        sha256 = "4fcd469a24bb597e0bc8636b36d45caca4314bed483a3dcae73f76bba7b218b2",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxathenastatic",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxathenastatic.zip",
-        sha256 = "b2822a98e98086513e4b127cbd6e54effa3f3c7f3f86480b64ecdcadaee07e6f",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxathenadebug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxathenadebug.zip",
-        sha256 = "688172bc8d10409b1a1e7cebbffaebc4fc9d52c81dea70d305859a6d9fc6f75a",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxathenastaticdebug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxathenastaticdebug.zip",
-        sha256 = "84d9df452eb1d77683c8811a50d618e9f07873014a04ab0c523ad12247bf7adc",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxsystemcore",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxsystemcore.zip",
-        sha256 = "bd8f19fdd16291ba940cbccc68dee737ecc74c0035adfe75165c6aa2b5734afd",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxsystemcorestatic",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxsystemcorestatic.zip",
-        sha256 = "a97b3e9326a6c7aa6ee97233495540b382a312fa57bd02b8d11b21703937e5e9",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxsystemcoredebug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxsystemcoredebug.zip",
-        sha256 = "b384fcfc4d5b060dd26f4518f5782ab5e21a82b9be26656861eb031fe6df1193",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxsystemcorestaticdebug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxsystemcorestaticdebug.zip",
-        sha256 = "455880a03db5e5af9bf337526eca065b59d3aa670ff2b1e4d055cec71339db72",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm32",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxarm32.zip",
-        sha256 = "69dcda97294d51b86db60505de61fb99dd905e92dd5995584d1c62a027d6e652",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm64",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxarm64.zip",
-        sha256 = "be814284499e70c94c11934f2ab6ce2f90714f76031d3384957f071cec7f30bc",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxx86-64",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxx86-64.zip",
-        sha256 = "f2d9b51c752bbef26cf613d999054fca2f38e622fa503d32d42c4a6895092c43",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxarm64",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-osxarm64.zip",
-        sha256 = "8994e3281f028e21d837a362b1e23f258b68cc9b0ced1fe1410d3431ba87a0a9",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxuniversal",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-osxuniversal.zip",
-        sha256 = "ef8c557a912e28a048ea5a601b6e2494fb855ce4cc628f5630bf82defbd00a61",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxx86-64",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-osxx86-64.zip",
-        sha256 = "4aaef18a3074c2db17721844c205df13d27f015e204514216c436adfcd6290dc",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86-64",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-windowsx86-64.zip",
-        sha256 = "c230df0a5c26ce77a02638e2f1902d459830e33c1e0b99c3b505135b2687ddf4",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-windowsx86.zip",
-        sha256 = "fd55ef0eaa59b0b715a18bf48db073131b75f92eaac14840a64d263181949bab",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsarm64",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-windowsarm64.zip",
-        sha256 = "80aa7f94ccddaf0d92190ce3072f411c39d8ceb6555dfb8a1ecaedc65892b2c2",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm32static",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxarm32static.zip",
-        sha256 = "c9ce67ba109b0cbf5b1c4bbe6aca15b831dc4232b8f71c94895cd0118e08eed9",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm64static",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxarm64static.zip",
-        sha256 = "f4fe718c0a8f378440ddc7e51dc9353d303c2298985ba7c77f6a838f91b9bd63",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxx86-64static",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxx86-64static.zip",
-        sha256 = "1338d8a0b610cd5a922dc2384be73755345791bf5e6319210f468369d6d80246",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxarm64static",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-osxarm64static.zip",
-        sha256 = "b99fe8e498685ba88310ef32f497d582195018233f18f2f3842e48f5edeec84b",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxuniversalstatic",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-osxuniversalstatic.zip",
-        sha256 = "eeca3f28ce3b840c8f91ec7ea9f14d8b8d61e21a94cc1b26f693230c26603d05",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxx86-64static",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-osxx86-64static.zip",
-        sha256 = "53c01641c2106b802a4cce85ff12f80c4cf4eaecdfeb0b26a3e15b44c61cb34d",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86-64static",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-windowsx86-64static.zip",
-        sha256 = "22cb69efc521b51d71d018e11a71a8f8e560b750710ac45a6764930dc9a008d9",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86static",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-windowsx86static.zip",
-        sha256 = "4133f7e2458c9dc1a7771be8231a348073a8f556ab5475dc091b0566c0be7b6b",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsarm64static",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-windowsarm64static.zip",
-        sha256 = "1112aac5e9cedde35d1e3ee90d1444ee55db0c68542e1e8d748c1b6ac6e26f40",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm32debug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxarm32debug.zip",
-        sha256 = "7833a7ec3acd1e2b9045a3ebd1cbd1d6ab85fe54ef4868c818c0b71b2133fa67",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm64debug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxarm64debug.zip",
-        sha256 = "60138eb357fc269277c80156853bcd9db08bac7915a0b7051a4a3277c8391f29",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxx86-64debug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxx86-64debug.zip",
-        sha256 = "35c88d5db2c9cc343e44ccaf3524068b328c7d0ea90df5351c39f1f881d8e40b",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxarm64debug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-osxarm64debug.zip",
-        sha256 = "07e8d358f857d64f0c9306a24098bb77f1526a18988230d2e8ef9f881a401928",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxuniversaldebug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-osxuniversaldebug.zip",
-        sha256 = "3fa16c3e1ec2e5e2812cb415c92d649d466b065ed5a0f06352bf40ab32389d69",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxx86-64debug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-osxx86-64debug.zip",
-        sha256 = "9e9a695d428b2ede69faf801b0152c23256384b543ff8768300f97298caa960a",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86-64debug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-windowsx86-64debug.zip",
-        sha256 = "ef670782658e7d5b9c50235197c7bf4fa650a9c4125b67a92fd4cdb7c6f77c0a",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86debug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-windowsx86debug.zip",
-        sha256 = "df7a44756f97417a24fa2a85b0d801a40864b679d26f45fa12b5c6edd2f88c12",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsarm64debug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-windowsarm64debug.zip",
-        sha256 = "ed86da931fcc66ec21e7d6d4f97a9e3e4dc7264d8929702c68145e984c013791",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:shared.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm32staticdebug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxarm32staticdebug.zip",
-        sha256 = "f5185acc7b863c80f6dc9eeeb1fee02200211f8d0e68823b28569d01b509dd8a",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm64staticdebug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxarm64staticdebug.zip",
-        sha256 = "83dc4aeeb4953ad4adab82ab23b94d4beb69f6ddfc93f0e38cb171fffe28ae9e",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxx86-64staticdebug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-linuxx86-64staticdebug.zip",
-        sha256 = "6e0d47e3f4735dc2445bb241ff5e05b48b8110338c54169b5126a23b99b570c1",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxarm64staticdebug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-osxarm64staticdebug.zip",
-        sha256 = "e8739f77519cddcbca8f25fd6437fb196d9fe1edcd63fa3357e62e1880fd089b",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxuniversalstaticdebug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-osxuniversalstaticdebug.zip",
-        sha256 = "5f0bc46c5c959f2ea584a96955906f183283d911b9f7532749d4e9cab8ad8b0e",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxx86-64staticdebug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-osxx86-64staticdebug.zip",
-        sha256 = "6ebd2d2fa123085ac261b539df9c6fd01536660ca21fdebfa60f3eedd7d78359",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86-64staticdebug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-windowsx86-64staticdebug.zip",
-        sha256 = "26d8e9752a4ceffcc75c32f386eb3f5dd1f104edf9424c5a28497c862aacc3d2",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86staticdebug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-windowsx86staticdebug.zip",
-        sha256 = "53d760be3957824b452c10b1756ce6ce6718cc5f48bfc96beb869d7750b762f0",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
-    )
-    maybe(
-        http_archive,
-        "bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsarm64staticdebug",
-        url = "https://frcmaven.wpi.edu/release/edu/wpi/first/thirdparty/frc2025/opencv/opencv-cpp/4.10.0-3/opencv-cpp-4.10.0-3-windowsarm64staticdebug.zip",
-        sha256 = "e876349009c07649335c81bba178baea63704fb47e3128f0049ca28dc8d6d8ac",
-        build_file = "@bzlmodrio-opencv//private/cpp/opencv:static.BUILD.bazel",
+    __static_shared_pair(
+        mctx,
+        name= "linuxathena",
+        shared_sha256 = "4fcd469a24bb597e0bc8636b36d45caca4314bed483a3dcae73f76bba7b218b2",
+        static_sha256 = "b2822a98e98086513e4b127cbd6e54effa3f3c7f3f86480b64ecdcadaee07e6f",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "linuxathenadebug",
+        shared_sha256 = "688172bc8d10409b1a1e7cebbffaebc4fc9d52c81dea70d305859a6d9fc6f75a",
+        static_sha256 = "84d9df452eb1d77683c8811a50d618e9f07873014a04ab0c523ad12247bf7adc",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "linuxsystemcore",
+        shared_sha256 = "bd8f19fdd16291ba940cbccc68dee737ecc74c0035adfe75165c6aa2b5734afd",
+        static_sha256 = "a97b3e9326a6c7aa6ee97233495540b382a312fa57bd02b8d11b21703937e5e9",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "linuxsystemcoredebug",
+        shared_sha256 = "b384fcfc4d5b060dd26f4518f5782ab5e21a82b9be26656861eb031fe6df1193",
+        static_sha256 = "455880a03db5e5af9bf337526eca065b59d3aa670ff2b1e4d055cec71339db72",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "linuxarm32",
+        shared_sha256 = "69dcda97294d51b86db60505de61fb99dd905e92dd5995584d1c62a027d6e652",
+        static_sha256 = "c9ce67ba109b0cbf5b1c4bbe6aca15b831dc4232b8f71c94895cd0118e08eed9",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "linuxarm64",
+        shared_sha256 = "be814284499e70c94c11934f2ab6ce2f90714f76031d3384957f071cec7f30bc",
+        static_sha256 = "f4fe718c0a8f378440ddc7e51dc9353d303c2298985ba7c77f6a838f91b9bd63",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "linuxx86-64",
+        shared_sha256 = "f2d9b51c752bbef26cf613d999054fca2f38e622fa503d32d42c4a6895092c43",
+        static_sha256 = "1338d8a0b610cd5a922dc2384be73755345791bf5e6319210f468369d6d80246",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "osxarm64",
+        shared_sha256 = "8994e3281f028e21d837a362b1e23f258b68cc9b0ced1fe1410d3431ba87a0a9",
+        static_sha256 = "b99fe8e498685ba88310ef32f497d582195018233f18f2f3842e48f5edeec84b",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "osxuniversal",
+        shared_sha256 = "ef8c557a912e28a048ea5a601b6e2494fb855ce4cc628f5630bf82defbd00a61",
+        static_sha256 = "eeca3f28ce3b840c8f91ec7ea9f14d8b8d61e21a94cc1b26f693230c26603d05",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "osxx86-64",
+        shared_sha256 = "4aaef18a3074c2db17721844c205df13d27f015e204514216c436adfcd6290dc",
+        static_sha256 = "53c01641c2106b802a4cce85ff12f80c4cf4eaecdfeb0b26a3e15b44c61cb34d",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "windowsx86-64",
+        shared_sha256 = "c230df0a5c26ce77a02638e2f1902d459830e33c1e0b99c3b505135b2687ddf4",
+        static_sha256 = "22cb69efc521b51d71d018e11a71a8f8e560b750710ac45a6764930dc9a008d9",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "windowsx86",
+        shared_sha256 = "fd55ef0eaa59b0b715a18bf48db073131b75f92eaac14840a64d263181949bab",
+        static_sha256 = "4133f7e2458c9dc1a7771be8231a348073a8f556ab5475dc091b0566c0be7b6b",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "windowsarm64",
+        shared_sha256 = "80aa7f94ccddaf0d92190ce3072f411c39d8ceb6555dfb8a1ecaedc65892b2c2",
+        static_sha256 = "1112aac5e9cedde35d1e3ee90d1444ee55db0c68542e1e8d748c1b6ac6e26f40",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "linuxarm32debug",
+        shared_sha256 = "7833a7ec3acd1e2b9045a3ebd1cbd1d6ab85fe54ef4868c818c0b71b2133fa67",
+        static_sha256 = "f5185acc7b863c80f6dc9eeeb1fee02200211f8d0e68823b28569d01b509dd8a",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "linuxarm64debug",
+        shared_sha256 = "60138eb357fc269277c80156853bcd9db08bac7915a0b7051a4a3277c8391f29",
+        static_sha256 = "83dc4aeeb4953ad4adab82ab23b94d4beb69f6ddfc93f0e38cb171fffe28ae9e",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "linuxx86-64debug",
+        shared_sha256 = "35c88d5db2c9cc343e44ccaf3524068b328c7d0ea90df5351c39f1f881d8e40b",
+        static_sha256 = "6e0d47e3f4735dc2445bb241ff5e05b48b8110338c54169b5126a23b99b570c1",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "osxarm64debug",
+        shared_sha256 = "07e8d358f857d64f0c9306a24098bb77f1526a18988230d2e8ef9f881a401928",
+        static_sha256 = "e8739f77519cddcbca8f25fd6437fb196d9fe1edcd63fa3357e62e1880fd089b",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "osxuniversaldebug",
+        shared_sha256 = "3fa16c3e1ec2e5e2812cb415c92d649d466b065ed5a0f06352bf40ab32389d69",
+        static_sha256 = "5f0bc46c5c959f2ea584a96955906f183283d911b9f7532749d4e9cab8ad8b0e",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "osxx86-64debug",
+        shared_sha256 = "9e9a695d428b2ede69faf801b0152c23256384b543ff8768300f97298caa960a",
+        static_sha256 = "6ebd2d2fa123085ac261b539df9c6fd01536660ca21fdebfa60f3eedd7d78359",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "windowsx86-64debug",
+        shared_sha256 = "ef670782658e7d5b9c50235197c7bf4fa650a9c4125b67a92fd4cdb7c6f77c0a",
+        static_sha256 = "26d8e9752a4ceffcc75c32f386eb3f5dd1f104edf9424c5a28497c862aacc3d2",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "windowsx86debug",
+        shared_sha256 = "df7a44756f97417a24fa2a85b0d801a40864b679d26f45fa12b5c6edd2f88c12",
+        static_sha256 = "53d760be3957824b452c10b1756ce6ce6718cc5f48bfc96beb869d7750b762f0",
+    )
+    __static_shared_pair(
+        mctx,
+        name= "windowsarm64debug",
+        shared_sha256 = "ed86da931fcc66ec21e7d6d4f97a9e3e4dc7264d8929702c68145e984c013791",
+        static_sha256 = "e876349009c07649335c81bba178baea63704fb47e3128f0049ca28dc8d6d8ac",
     )
 
 def setup_legacy_bzlmodrio_opencv_cpp_dependencies():
diff --git a/private/cpp/opencv/BUILD.bazel b/private/cpp/opencv/BUILD.bazel
index efeac77..dd0a0b1 100644
--- a/private/cpp/opencv/BUILD.bazel
+++ b/private/cpp/opencv/BUILD.bazel
@@ -1,4 +1,5 @@
-load("@rules_cc//cc:defs.bzl", "cc_library")
+load("@rules_cc//cc:defs.bzl", "cc_library", "cc_shared_library")
+load("//private/cpp/opencv:wrapped_cc_import.bzl", "opencv_libraries")
 
 alias(
     name = "header_files",
@@ -6,104 +7,48 @@ alias(
     visibility = ["@bzlmodrio-opencv//:__subpackages__"],
 )
 
-cc_library(
-    name = "shared_interface",
-    srcs = select({
-        "@rules_bzlmodrio_toolchains//conditions:windows_arm64": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsarm64//:shared_interface"],
-        "@rules_bzlmodrio_toolchains//conditions:windows_arm64_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsarm64debug//:shared_interface"],
-        "@rules_bzlmodrio_toolchains//conditions:windows_x86_64": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86-64//:shared_interface"],
-        "@rules_bzlmodrio_toolchains//conditions:windows_x86_64_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86-64debug//:shared_interface"],
+[ alias(
+    name = lib + "_shared",
+    actual = select({
+        "@rules_bzlmodrio_toolchains//conditions:linux_x86_64": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxx86-64//:" + lib + "_shared",
+        "@rules_bzlmodrio_toolchains//conditions:linux_x86_64_debug": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxx86-64debug//:" + lib + "_shared",
+        "@rules_bzlmodrio_toolchains//conditions:osx": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxuniversal//:" + lib + "_shared",
+        "@rules_bzlmodrio_toolchains//conditions:osx_debug": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxuniversaldebug//:" + lib + "_shared",
+        "@rules_bzlmodrio_toolchains//conditions:windows_arm64": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsarm64//:" + lib + "_shared",
+        "@rules_bzlmodrio_toolchains//conditions:windows_arm64_debug": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsarm64debug//:" + lib + "_shared",
+        "@rules_bzlmodrio_toolchains//conditions:windows_x86_64": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86-64//:" + lib + "_shared",
+        "@rules_bzlmodrio_toolchains//conditions:windows_x86_64_debug": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86-64debug//:" + lib + "_shared",
+        "@rules_bzlmodrio_toolchains//constraints/is_bookworm64:bookworm64": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm64//:" + lib + "_shared",
+        "@rules_bzlmodrio_toolchains//constraints/is_bookworm64:bookworm64_debug": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm64debug//:" + lib + "_shared",
+        "@rules_bzlmodrio_toolchains//constraints/is_raspibookworm32:raspibookworm32": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm32//:" + lib + "_shared",
+        "@rules_bzlmodrio_toolchains//constraints/is_raspibookworm32:raspibookworm32_debug": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm32debug//:" + lib + "_shared",
+        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxathena//:" + lib + "_shared",
+        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio_debug": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxathenadebug//:" + lib + "_shared",
+        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxsystemcore//:" + lib + "_shared",
+        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore_debug": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxsystemcoredebug//:" + lib + "_shared",
     }),
-    linkstatic = True,
-    tags = ["manual"],
-    visibility = ["@bzlmodrio-opencv//:__subpackages__"],
-    deps = ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_headers//:headers"],
-)
-
-filegroup(
-    name = "shared_raw",
-    srcs = select({
-        "@rules_bzlmodrio_toolchains//conditions:linux_x86_64": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxx86-64//:shared"],
-        "@rules_bzlmodrio_toolchains//conditions:linux_x86_64_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxx86-64debug//:shared"],
-        "@rules_bzlmodrio_toolchains//conditions:osx": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxuniversal//:shared"],
-        "@rules_bzlmodrio_toolchains//conditions:osx_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxuniversaldebug//:shared"],
-        "@rules_bzlmodrio_toolchains//conditions:windows_arm64": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsarm64//:shared"],
-        "@rules_bzlmodrio_toolchains//conditions:windows_arm64_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsarm64debug//:shared"],
-        "@rules_bzlmodrio_toolchains//conditions:windows_x86_64": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86-64//:shared"],
-        "@rules_bzlmodrio_toolchains//conditions:windows_x86_64_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86-64debug//:shared"],
-        "@rules_bzlmodrio_toolchains//constraints/is_bookworm64:bookworm64": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm64//:shared"],
-        "@rules_bzlmodrio_toolchains//constraints/is_bookworm64:bookworm64_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm64debug//:shared"],
-        "@rules_bzlmodrio_toolchains//constraints/is_raspibookworm32:raspibookworm32": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm32//:shared"],
-        "@rules_bzlmodrio_toolchains//constraints/is_raspibookworm32:raspibookworm32_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm32debug//:shared"],
-        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxathena//:shared"],
-        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxathenadebug//:shared"],
-        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxsystemcore//:shared"],
-        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxsystemcoredebug//:shared"],
-        "//conditions:default": [],
-    }),
-    visibility = ["@bzlmodrio-opencv//:__subpackages__"],
-)
-
-cc_library(
-    name = "shared",
-    srcs = [":shared_raw"],
-    visibility = ["@bzlmodrio-opencv//:__subpackages__"],
-    deps = [] + select({
-        "@rules_bzlmodrio_toolchains//conditions:windows_arm64": [":shared_interface"],
-        "@rules_bzlmodrio_toolchains//conditions:windows_x86_64": [":shared_interface"],
-        "//conditions:default": [],
-    }) + ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_headers//:headers"],
-    alwayslink = 1,
-)
+    visibility = ["//visibility:public"],
+) for lib in opencv_libraries]
 
-cc_library(
-    name = "static",
-    linkstatic = 1,
-    visibility = ["@bzlmodrio-opencv//:__subpackages__"],
-    deps = ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_headers//:headers"] + select({
-        "@rules_bzlmodrio_toolchains//conditions:linux_x86_64": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxx86-64static//:static_libs"],
-        "@rules_bzlmodrio_toolchains//conditions:linux_x86_64_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxx86-64staticdebug//:static_libs"],
-        "@rules_bzlmodrio_toolchains//conditions:osx": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxuniversalstatic//:static_libs"],
-        "@rules_bzlmodrio_toolchains//conditions:osx_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxuniversalstaticdebug//:static_libs"],
-        "@rules_bzlmodrio_toolchains//conditions:windows_arm64": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsarm64static//:static_libs"],
-        "@rules_bzlmodrio_toolchains//conditions:windows_arm64_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsarm64staticdebug//:static_libs"],
-        "@rules_bzlmodrio_toolchains//conditions:windows_x86_64": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86-64static//:static_libs"],
-        "@rules_bzlmodrio_toolchains//conditions:windows_x86_64_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86-64staticdebug//:static_libs"],
-        "@rules_bzlmodrio_toolchains//constraints/is_bookworm64:bookworm64": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm64static//:static_libs"],
-        "@rules_bzlmodrio_toolchains//constraints/is_bookworm64:bookworm64_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm64staticdebug//:static_libs"],
-        "@rules_bzlmodrio_toolchains//constraints/is_raspibookworm32:raspibookworm32": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm32static//:static_libs"],
-        "@rules_bzlmodrio_toolchains//constraints/is_raspibookworm32:raspibookworm32_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm32staticdebug//:static_libs"],
-        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxathenastatic//:static_libs"],
-        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxathenastaticdebug//:static_libs"],
-        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxsystemcorestatic//:static_libs"],
-        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxsystemcorestaticdebug//:static_libs"],
-    }),
-)
-
-cc_library(
-    name = "jni",
-    srcs = select({
-        "@rules_bzlmodrio_toolchains//conditions:linux_x86_64": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxx86-64//:jni"],
-        "@rules_bzlmodrio_toolchains//conditions:linux_x86_64_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxx86-64debug//:jni"],
-        "@rules_bzlmodrio_toolchains//conditions:osx": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxuniversal//:jni"],
-        "@rules_bzlmodrio_toolchains//conditions:osx_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxuniversaldebug//:jni"],
-        "@rules_bzlmodrio_toolchains//conditions:windows_arm64": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsarm64//:jni"],
-        "@rules_bzlmodrio_toolchains//conditions:windows_arm64_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsarm64debug//:jni"],
-        "@rules_bzlmodrio_toolchains//conditions:windows_x86_64": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86-64//:jni"],
-        "@rules_bzlmodrio_toolchains//conditions:windows_x86_64_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86-64debug//:jni"],
-        "@rules_bzlmodrio_toolchains//constraints/is_bookworm64:bookworm64": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm64//:jni"],
-        "@rules_bzlmodrio_toolchains//constraints/is_bookworm64:bookworm64_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm64debug//:jni"],
-        "@rules_bzlmodrio_toolchains//constraints/is_raspibookworm32:raspibookworm32": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm32//:jni"],
-        "@rules_bzlmodrio_toolchains//constraints/is_raspibookworm32:raspibookworm32_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm32debug//:jni"],
-        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxathena//:jni"],
-        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxathenadebug//:jni"],
-        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxsystemcore//:jni"],
-        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore_debug": ["@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxsystemcoredebug//:jni"],
+alias(
+    name = "opencv",
+    actual = select({
+        "@rules_bzlmodrio_toolchains//conditions:linux_x86_64": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxx86-64//:static",
+        "@rules_bzlmodrio_toolchains//conditions:linux_x86_64_debug": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxx86-64debug//:static",
+        "@rules_bzlmodrio_toolchains//conditions:osx": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxuniversal//:static",
+        "@rules_bzlmodrio_toolchains//conditions:osx_debug": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_osxuniversaldebug//:static",
+        "@rules_bzlmodrio_toolchains//conditions:windows_arm64": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsarm64//:static",
+        "@rules_bzlmodrio_toolchains//conditions:windows_arm64_debug": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsarm64debug//:static",
+        "@rules_bzlmodrio_toolchains//conditions:windows_x86_64": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86-64//:static",
+        "@rules_bzlmodrio_toolchains//conditions:windows_x86_64_debug": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_windowsx86-64debug//:static",
+        "@rules_bzlmodrio_toolchains//constraints/is_bookworm64:bookworm64": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm64//:static",
+        "@rules_bzlmodrio_toolchains//constraints/is_bookworm64:bookworm64_debug": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm64debug//:static",
+        "@rules_bzlmodrio_toolchains//constraints/is_raspibookworm32:raspibookworm32": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm32//:static",
+        "@rules_bzlmodrio_toolchains//constraints/is_raspibookworm32:raspibookworm32_debug": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxarm32debug//:static",
+        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxathena//:static",
+        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio_debug": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxathenadebug//:static",
+        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxsystemcore//:static",
+        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore_debug": "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_linuxsystemcoredebug//:static",
     }),
-    linkstatic = 1,
     visibility = ["@bzlmodrio-opencv//:__subpackages__"],
-    deps = [
-        ":shared",
-        "@bazelrio_edu_wpi_first_thirdparty_frc_opencv_opencv-cpp_headers//:headers",
-    ],
 )
diff --git a/private/cpp/opencv/wrapped_cc_import.bzl b/private/cpp/opencv/wrapped_cc_import.bzl
new file mode 100644
index 0000000..30551d8
--- /dev/null
+++ b/private/cpp/opencv/wrapped_cc_import.bzl
@@ -0,0 +1,110 @@
+load("@rules_cc//cc:defs.bzl", "cc_import")
+load("@bzlmodrio-opencv//:rules/cc_shared_import_adapter.bzl", "cc_shared_info_adapter")
+
+opencv_libraries = [
+    "opencv_aruco",
+    "opencv_calib3d",
+    "opencv_core",
+    "opencv_dnn",
+    "opencv_features2d",
+    "opencv_flann",
+    "opencv_gapi",
+    "opencv_highgui",
+    "opencv_imgcodecs",
+    "opencv_imgproc",
+    "opencv_java",
+    "opencv_ml",
+    "opencv_objdetect",
+    "opencv_photo",
+    "opencv_stitching",
+    "opencv_videoio",
+    "opencv_video",
+]
+
+def cc_import_name(shared_library_file):
+    last_slash = shared_library_file.rfind('/')
+    result = shared_library_file[last_slash + 1:]
+
+    if result.startswith('lib'):
+      result = result[3:]
+
+    if '.so' in result:
+      result = result[: result.rfind('.so')]
+    elif '.dll' in result:
+      result = result[: result.rfind('.dll')]
+    elif '.dylib' in result:
+      result = result[: result.rfind('.dylib')]
+    else:
+      fail("Unexpected library, " + shared_library_file)
+
+    for i in range(len(result) - 1, -1, -1):
+      # Strip off any .4.10, 4100, etc off the back end.
+      if result[i] in "0123456789.":
+        continue
+      break
+
+    result = result[:i+1]
+
+    if result not in opencv_libraries:
+      fail('Unexpected opencv library %s', result)
+
+    return result
+
+def wrapped_cc_import(
+        shared_library_file,
+        static_name,
+        hdrs,
+        includes):
+    """
+    This macro takes a shared and static library, and creates two targets
+    for them. A cc_import target for static linking, and a _shared target,
+    which provides a CcSharedLibraryInfo for dynamic linking.
+    """
+    base_name = cc_import_name(shared_library_file)
+
+    interface_library = None
+    if shared_library_file.endswith(".dll"):
+        interface_library = shared_library_file[:-4] + ".lib"
+
+    # Create a single cc_import with both static and shared libraries, and headers.
+    # This target serves as the entry point for static linking.
+    # TODO(austin): pdb files.
+    cc_import(
+        name = base_name,
+        static_library = "@" + static_name + "//:static_library_file",
+        interface_library = interface_library,
+        shared_library = shared_library_file,
+        hdrs = hdrs,
+        includes = includes,
+        visibility = ["//visibility:public"],
+    )
+
+    cc_import(
+        name = base_name + "_shared_import",
+        interface_library = interface_library,
+        shared_library = shared_library_file,
+        hdrs = hdrs,
+        includes = includes,
+    )
+
+    # Create the shared info adapter target for dynamic linking.
+    shared_target_name = base_name + "_shared"
+    cc_shared_info_adapter(
+        name = shared_target_name,
+        static_dep = ":" + base_name,
+        dynamic_dep = ":" + base_name + "_shared_import",
+        visibility = ["//visibility:public"],
+    )
+
+def static_alias(
+    name,
+    libraries,
+    visibility):
+    if len(libraries) != 1:
+        fail("Didn't find exactly 1 library")
+
+    native.alias(
+        name = name,
+        actual = libraries[0],
+        visibility = visibility,
+    )
diff --git a/rules/cc_shared_import_adapter.bzl b/rules/cc_shared_import_adapter.bzl
new file mode 100644
index 0000000..2a1c1e9
--- /dev/null
+++ b/rules/cc_shared_import_adapter.bzl
@@ -0,0 +1,59 @@
+"""
+Rule for creating a CcSharedLibraryInfo provider from a pair of cc_import targets.
+"""
+
+load("@rules_cc//cc:defs.bzl", "CcInfo")
+load("@rules_cc//cc/common:cc_shared_library_info.bzl", "CcSharedLibraryInfo")
+
+def _cc_shared_info_adapter_impl(ctx):
+    """Implementation of the cc_shared_info_adapter rule."""
+    static_dep = ctx.attr.static_dep
+    static_dep_cc_info = static_dep[CcInfo]
+
+    dynamic_dep = ctx.attr.dynamic_dep
+    dynamic_dep_cc_info = dynamic_dep[CcInfo]
+
+    #print(ctx.label, 'CcInfo', static_dep_cc_info, 'linking_context\n', static_dep_cc_info.linking_context)
+
+    # The cc_import target for a shared library might not have a linker input
+    # if it's a versioned .so file. We need to find the one from the interface library.
+    linker_inputs = dynamic_dep_cc_info.linking_context.linker_inputs.to_list()
+    if not linker_inputs:
+        fail("No linker inputs found in the dependency.")
+
+    shared_linker_input = linker_inputs[0]
+
+    # Create the CcSharedLibraryInfo provider.
+    cc_shared_library_info = CcSharedLibraryInfo(
+        linker_input = shared_linker_input,
+        # Declare that this shared library exports the symbols of the cc_import target.
+        exports = [str(static_dep.label)],
+        dynamic_deps = depset(),
+        link_once_static_libs = [str(static_dep.label)],
+    )
+
+    runfiles = ctx.runfiles().merge(dynamic_dep[DefaultInfo].default_runfiles)
+
+    return [
+        DefaultInfo(
+            files = runfiles.files,
+            runfiles = runfiles,
+        ),
+        cc_shared_library_info,
+    ]
+
+cc_shared_info_adapter = rule(
+    implementation = _cc_shared_info_adapter_impl,
+    attrs = {
+        "static_dep": attr.label(
+            doc = "The cc_import target to adapt.",
+            providers = [CcInfo, DefaultInfo],
+            mandatory = True,
+        ),
+        "dynamic_dep": attr.label(
+            doc = "The cc_import target to adapt.",
+            providers = [CcInfo, DefaultInfo],
+            mandatory = True,
+        ),
+    },
+)
