From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PJ Reiniger <pj.reiniger@gmail.com>
Date: Wed, 15 Oct 2025 02:36:04 -0400
Subject: [PATCH 27/30] HAND FIX: final java package changes

---
 GeneratedFiles.md                 | 4 ++--
 commandsv2/WPILibNewCommands.json | 4 ++--
 romiVendordep/RomiVendordep.json  | 4 ++--
 xrpVendordep/XRPVendordep.json    | 4 ++--
 4 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/GeneratedFiles.md b/GeneratedFiles.md
index 3bf6838080f090bb7d36a4d621b2598ad5308c89..4a2b78861d3b8b4e1a1a8e0604d6ab8f0ae881e9 100644
--- a/GeneratedFiles.md
+++ b/GeneratedFiles.md
@@ -6,9 +6,9 @@ The Python script used to generate a subproject's files will always be located i
 
 The templates will be located under `subproject/src/generate/main`, and generated files will be located under `subproject/src/generated/main`.
 
-If the generated file is for C++, the hierarchy should be symmetrical, so if a generated header is located under `subproject/src/generated/main/native/include/frc/header.h`, the template to generate it should be located under `subproject/src/generate/main/native/include/frc/template.h.jinja`. You should pretend like `subproject/src/generate/main` is just like `subproject/src/main`, in that the file hierarchy must make sense if the files weren't generated, e.g, headers that would go in `subproject/src/main/native/include/blah` should be in `subproject/src/generated/main/native/include/blah`.
+If the generated file is for C++, the hierarchy should be symmetrical, so if a generated header is located under `subproject/src/generated/main/native/include/wpi/header.h`, the template to generate it should be located under `subproject/src/generate/main/native/include/wpi/template.h.jinja`. You should pretend like `subproject/src/generate/main` is just like `subproject/src/main`, in that the file hierarchy must make sense if the files weren't generated, e.g, headers that would go in `subproject/src/main/native/include/blah` should be in `subproject/src/generated/main/native/include/blah`.
 
-If the generated file is for Java, templates should be located under `subproject/src/generate/main/java`, and the hierarchy for output files should reflect the declared package of the output Java files. For example, a Jinja template at `subproject/src/main/java/template.java.jinja` with the package `edu.wpi.first.wpilibj` would be used to generate Java files located at `subproject/src/generated/main/java/edu/wpi/first/wpilibj`
+If the generated file is for Java, templates should be located under `subproject/src/generate/main/java`, and the hierarchy for output files should reflect the declared package of the output Java files. For example, a Jinja template at `subproject/src/main/java/template.java.jinja` with the package `org.wpilib.wpilibj` would be used to generate Java files located at `subproject/src/generated/main/java/org/wpilib/wpilibj`
 
 The JSON files live under `subproject/src/generate` since they apply to both languages. One unique case is JSON files that are used by multiple subprojects, currently only JSON files shared by wpilibc and wpilibj. In that specific case, the JSON files will always be located in wpilibj since Java is the most used language.
 
diff --git a/commandsv2/WPILibNewCommands.json b/commandsv2/WPILibNewCommands.json
index 070a597d647678db66fa851f9e8b3bf7091ea5af..24297f878dc20dd3ce2470ca1840cc0b023d0aca 100644
--- a/commandsv2/WPILibNewCommands.json
+++ b/commandsv2/WPILibNewCommands.json
@@ -8,7 +8,7 @@
   "jsonUrl": "",
   "javaDependencies": [
     {
-      "groupId": "edu.wpi.first.commandsv2",
+      "groupId": "org.wpilib.commandsv2",
       "artifactId": "commandsv2-java",
       "version": "wpilib"
     }
@@ -16,7 +16,7 @@
   "jniDependencies": [],
   "cppDependencies": [
     {
-      "groupId": "edu.wpi.first.commandsv2",
+      "groupId": "org.wpilib.commandsv2",
       "artifactId": "commandsv2-cpp",
       "version": "wpilib",
       "libName": "commandsv2",
diff --git a/romiVendordep/RomiVendordep.json b/romiVendordep/RomiVendordep.json
index 5efc100d7c85c5e2b365781927625daa74a4791a..81436e86fa0f6c80d87ca9254531be0f63ee6208 100644
--- a/romiVendordep/RomiVendordep.json
+++ b/romiVendordep/RomiVendordep.json
@@ -8,7 +8,7 @@
   "jsonUrl": "",
   "javaDependencies": [
     {
-      "groupId": "edu.wpi.first.romiVendordep",
+      "groupId": "org.wpilib.romiVendordep",
       "artifactId": "romiVendordep-java",
       "version": "wpilib"
     }
@@ -16,7 +16,7 @@
   "jniDependencies": [],
   "cppDependencies": [
     {
-      "groupId": "edu.wpi.first.romiVendordep",
+      "groupId": "org.wpilib.romiVendordep",
       "artifactId": "romiVendordep-cpp",
       "version": "wpilib",
       "libName": "romiVendordep",
diff --git a/xrpVendordep/XRPVendordep.json b/xrpVendordep/XRPVendordep.json
index e02b7004aedaef3328f192426cb8d5e793565069..9bdd7a01e501fb6588c84b009489d33eb3ce75e3 100644
--- a/xrpVendordep/XRPVendordep.json
+++ b/xrpVendordep/XRPVendordep.json
@@ -8,7 +8,7 @@
   "jsonUrl": "",
   "javaDependencies": [
     {
-      "groupId": "edu.wpi.first.xrpVendordep",
+      "groupId": "org.wpilib.xrpVendordep",
       "artifactId": "xrpVendordep-java",
       "version": "wpilib"
     }
@@ -16,7 +16,7 @@
   "jniDependencies": [],
   "cppDependencies": [
     {
-      "groupId": "edu.wpi.first.xrpVendordep",
+      "groupId": "org.wpilib.xrpVendordep",
       "artifactId": "xrpVendordep-cpp",
       "version": "wpilib",
       "libName": "xrpVendordep",
