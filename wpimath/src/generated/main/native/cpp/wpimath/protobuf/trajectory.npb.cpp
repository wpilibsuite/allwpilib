// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.
/* Automatically generated nanopb constant definitions */
/* Generated by nanopb-0.4.9 */

#include "trajectory.npb.hpp"
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#include <span>
#include <string_view>
static const uint8_t file_descriptor[] {
0x0a,0x10,0x74,0x72,0x61,0x6a,0x65,0x63,0x74,0x6f,
0x72,0x79,0x2e,0x70,0x72,0x6f,0x74,0x6f,0x12,0x09,
0x77,0x70,0x69,0x2e,0x70,0x72,0x6f,0x74,0x6f,0x1a,
0x10,0x67,0x65,0x6f,0x6d,0x65,0x74,0x72,0x79,0x32,
0x64,0x2e,0x70,0x72,0x6f,0x74,0x6f,0x22,0xba,0x01,
0x0a,0x17,0x50,0x72,0x6f,0x74,0x6f,0x62,0x75,0x66,
0x54,0x72,0x61,0x6a,0x65,0x63,0x74,0x6f,0x72,0x79,
0x53,0x74,0x61,0x74,0x65,0x12,0x12,0x0a,0x04,0x74,
0x69,0x6d,0x65,0x18,0x01,0x20,0x01,0x28,0x01,0x52,
0x04,0x74,0x69,0x6d,0x65,0x12,0x1a,0x0a,0x08,0x76,
0x65,0x6c,0x6f,0x63,0x69,0x74,0x79,0x18,0x02,0x20,
0x01,0x28,0x01,0x52,0x08,0x76,0x65,0x6c,0x6f,0x63,
0x69,0x74,0x79,0x12,0x22,0x0a,0x0c,0x61,0x63,0x63,
0x65,0x6c,0x65,0x72,0x61,0x74,0x69,0x6f,0x6e,0x18,
0x03,0x20,0x01,0x28,0x01,0x52,0x0c,0x61,0x63,0x63,
0x65,0x6c,0x65,0x72,0x61,0x74,0x69,0x6f,0x6e,0x12,
0x2d,0x0a,0x04,0x70,0x6f,0x73,0x65,0x18,0x04,0x20,
0x01,0x28,0x0b,0x32,0x19,0x2e,0x77,0x70,0x69,0x2e,
0x70,0x72,0x6f,0x74,0x6f,0x2e,0x50,0x72,0x6f,0x74,
0x6f,0x62,0x75,0x66,0x50,0x6f,0x73,0x65,0x32,0x64,
0x52,0x04,0x70,0x6f,0x73,0x65,0x12,0x1c,0x0a,0x09,
0x63,0x75,0x72,0x76,0x61,0x74,0x75,0x72,0x65,0x18,
0x05,0x20,0x01,0x28,0x01,0x52,0x09,0x63,0x75,0x72,
0x76,0x61,0x74,0x75,0x72,0x65,0x22,0x50,0x0a,0x12,
0x50,0x72,0x6f,0x74,0x6f,0x62,0x75,0x66,0x54,0x72,
0x61,0x6a,0x65,0x63,0x74,0x6f,0x72,0x79,0x12,0x3a,
0x0a,0x06,0x73,0x74,0x61,0x74,0x65,0x73,0x18,0x02,
0x20,0x03,0x28,0x0b,0x32,0x22,0x2e,0x77,0x70,0x69,
0x2e,0x70,0x72,0x6f,0x74,0x6f,0x2e,0x50,0x72,0x6f,
0x74,0x6f,0x62,0x75,0x66,0x54,0x72,0x61,0x6a,0x65,
0x63,0x74,0x6f,0x72,0x79,0x53,0x74,0x61,0x74,0x65,
0x52,0x06,0x73,0x74,0x61,0x74,0x65,0x73,0x42,0x1a,
0x0a,0x18,0x65,0x64,0x75,0x2e,0x77,0x70,0x69,0x2e,
0x66,0x69,0x72,0x73,0x74,0x2e,0x6d,0x61,0x74,0x68,
0x2e,0x70,0x72,0x6f,0x74,0x6f,0x4a,0xc4,0x03,0x0a,
0x06,0x12,0x04,0x00,0x00,0x12,0x01,0x0a,0x08,0x0a,
0x01,0x0c,0x12,0x03,0x00,0x00,0x12,0x0a,0x08,0x0a,
0x01,0x02,0x12,0x03,0x02,0x00,0x12,0x0a,0x09,0x0a,
0x02,0x03,0x00,0x12,0x03,0x04,0x00,0x1a,0x0a,0x08,
0x0a,0x01,0x08,0x12,0x03,0x06,0x00,0x31,0x0a,0x09,
0x0a,0x02,0x08,0x01,0x12,0x03,0x06,0x00,0x31,0x0a,
0x0a,0x0a,0x02,0x04,0x00,0x12,0x04,0x08,0x00,0x0e,
0x01,0x0a,0x0a,0x0a,0x03,0x04,0x00,0x01,0x12,0x03,
0x08,0x08,0x1f,0x0a,0x0b,0x0a,0x04,0x04,0x00,0x02,
0x00,0x12,0x03,0x09,0x02,0x12,0x0a,0x0c,0x0a,0x05,
0x04,0x00,0x02,0x00,0x05,0x12,0x03,0x09,0x02,0x08,
0x0a,0x0c,0x0a,0x05,0x04,0x00,0x02,0x00,0x01,0x12,
0x03,0x09,0x09,0x0d,0x0a,0x0c,0x0a,0x05,0x04,0x00,
0x02,0x00,0x03,0x12,0x03,0x09,0x10,0x11,0x0a,0x0b,
0x0a,0x04,0x04,0x00,0x02,0x01,0x12,0x03,0x0a,0x02,
0x16,0x0a,0x0c,0x0a,0x05,0x04,0x00,0x02,0x01,0x05,
0x12,0x03,0x0a,0x02,0x08,0x0a,0x0c,0x0a,0x05,0x04,
0x00,0x02,0x01,0x01,0x12,0x03,0x0a,0x09,0x11,0x0a,
0x0c,0x0a,0x05,0x04,0x00,0x02,0x01,0x03,0x12,0x03,
0x0a,0x14,0x15,0x0a,0x0b,0x0a,0x04,0x04,0x00,0x02,
0x02,0x12,0x03,0x0b,0x02,0x1a,0x0a,0x0c,0x0a,0x05,
0x04,0x00,0x02,0x02,0x05,0x12,0x03,0x0b,0x02,0x08,
0x0a,0x0c,0x0a,0x05,0x04,0x00,0x02,0x02,0x01,0x12,
0x03,0x0b,0x09,0x15,0x0a,0x0c,0x0a,0x05,0x04,0x00,
0x02,0x02,0x03,0x12,0x03,0x0b,0x18,0x19,0x0a,0x0b,
0x0a,0x04,0x04,0x00,0x02,0x03,0x12,0x03,0x0c,0x02,
0x1a,0x0a,0x0c,0x0a,0x05,0x04,0x00,0x02,0x03,0x06,
0x12,0x03,0x0c,0x02,0x10,0x0a,0x0c,0x0a,0x05,0x04,
0x00,0x02,0x03,0x01,0x12,0x03,0x0c,0x11,0x15,0x0a,
0x0c,0x0a,0x05,0x04,0x00,0x02,0x03,0x03,0x12,0x03,
0x0c,0x18,0x19,0x0a,0x0b,0x0a,0x04,0x04,0x00,0x02,
0x04,0x12,0x03,0x0d,0x02,0x17,0x0a,0x0c,0x0a,0x05,
0x04,0x00,0x02,0x04,0x05,0x12,0x03,0x0d,0x02,0x08,
0x0a,0x0c,0x0a,0x05,0x04,0x00,0x02,0x04,0x01,0x12,
0x03,0x0d,0x09,0x12,0x0a,0x0c,0x0a,0x05,0x04,0x00,
0x02,0x04,0x03,0x12,0x03,0x0d,0x15,0x16,0x0a,0x0a,
0x0a,0x02,0x04,0x01,0x12,0x04,0x10,0x00,0x12,0x01,
0x0a,0x0a,0x0a,0x03,0x04,0x01,0x01,0x12,0x03,0x10,
0x08,0x1a,0x0a,0x0b,0x0a,0x04,0x04,0x01,0x02,0x00,
0x12,0x03,0x11,0x02,0x2e,0x0a,0x0c,0x0a,0x05,0x04,
0x01,0x02,0x00,0x04,0x12,0x03,0x11,0x02,0x0a,0x0a,
0x0c,0x0a,0x05,0x04,0x01,0x02,0x00,0x06,0x12,0x03,
0x11,0x0b,0x22,0x0a,0x0c,0x0a,0x05,0x04,0x01,0x02,
0x00,0x01,0x12,0x03,0x11,0x23,0x29,0x0a,0x0c,0x0a,
0x05,0x04,0x01,0x02,0x00,0x03,0x12,0x03,0x11,0x2c,
0x2d,0x62,0x06,0x70,0x72,0x6f,0x74,0x6f,0x33,
};
static const char file_name[] = "trajectory.proto";
static const char wpi_proto_ProtobufTrajectoryState_name[] = "wpi.proto.ProtobufTrajectoryState";
std::string_view wpi_proto_ProtobufTrajectoryState::msg_name(void) noexcept { return wpi_proto_ProtobufTrajectoryState_name; }
pb_filedesc_t wpi_proto_ProtobufTrajectoryState::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufTrajectoryState, wpi_proto_ProtobufTrajectoryState, AUTO)


static const char wpi_proto_ProtobufTrajectory_name[] = "wpi.proto.ProtobufTrajectory";
std::string_view wpi_proto_ProtobufTrajectory::msg_name(void) noexcept { return wpi_proto_ProtobufTrajectory_name; }
pb_filedesc_t wpi_proto_ProtobufTrajectory::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufTrajectory, wpi_proto_ProtobufTrajectory, AUTO)



#ifndef PB_CONVERT_DOUBLE_FLOAT
/* On some platforms (such as AVR), double is really float.
 * To be able to encode/decode double on these platforms, you need.
 * to define PB_CONVERT_DOUBLE_FLOAT in pb.h or compiler command line.
 */
PB_STATIC_ASSERT(sizeof(double) == 8, DOUBLE_MUST_BE_8_BYTES)
#endif

