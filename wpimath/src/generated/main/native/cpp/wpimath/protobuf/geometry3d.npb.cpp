// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.
/* Automatically generated nanopb constant definitions */
/* Generated by nanopb-0.4.9 */

#include "geometry3d.npb.h"
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#include <span>
#include <string_view>
static const uint8_t file_descriptor[] {
0x0a,0x10,0x67,0x65,0x6f,0x6d,0x65,0x74,0x72,0x79,
0x33,0x64,0x2e,0x70,0x72,0x6f,0x74,0x6f,0x12,0x09,
0x77,0x70,0x69,0x2e,0x70,0x72,0x6f,0x74,0x6f,0x22,
0x41,0x0a,0x15,0x50,0x72,0x6f,0x74,0x6f,0x62,0x75,
0x66,0x54,0x72,0x61,0x6e,0x73,0x6c,0x61,0x74,0x69,
0x6f,0x6e,0x33,0x64,0x12,0x0c,0x0a,0x01,0x78,0x18,
0x01,0x20,0x01,0x28,0x01,0x52,0x01,0x78,0x12,0x0c,
0x0a,0x01,0x79,0x18,0x02,0x20,0x01,0x28,0x01,0x52,
0x01,0x79,0x12,0x0c,0x0a,0x01,0x7a,0x18,0x03,0x20,
0x01,0x28,0x01,0x52,0x01,0x7a,0x22,0x4c,0x0a,0x12,
0x50,0x72,0x6f,0x74,0x6f,0x62,0x75,0x66,0x51,0x75,
0x61,0x74,0x65,0x72,0x6e,0x69,0x6f,0x6e,0x12,0x0c,
0x0a,0x01,0x77,0x18,0x01,0x20,0x01,0x28,0x01,0x52,
0x01,0x77,0x12,0x0c,0x0a,0x01,0x78,0x18,0x02,0x20,
0x01,0x28,0x01,0x52,0x01,0x78,0x12,0x0c,0x0a,0x01,
0x79,0x18,0x03,0x20,0x01,0x28,0x01,0x52,0x01,0x79,
0x12,0x0c,0x0a,0x01,0x7a,0x18,0x04,0x20,0x01,0x28,
0x01,0x52,0x01,0x7a,0x22,0x41,0x0a,0x12,0x50,0x72,
0x6f,0x74,0x6f,0x62,0x75,0x66,0x52,0x6f,0x74,0x61,
0x74,0x69,0x6f,0x6e,0x33,0x64,0x12,0x2b,0x0a,0x01,
0x71,0x18,0x01,0x20,0x01,0x28,0x0b,0x32,0x1d,0x2e,
0x77,0x70,0x69,0x2e,0x70,0x72,0x6f,0x74,0x6f,0x2e,
0x50,0x72,0x6f,0x74,0x6f,0x62,0x75,0x66,0x51,0x75,
0x61,0x74,0x65,0x72,0x6e,0x69,0x6f,0x6e,0x52,0x01,
0x71,0x22,0x8f,0x01,0x0a,0x0e,0x50,0x72,0x6f,0x74,
0x6f,0x62,0x75,0x66,0x50,0x6f,0x73,0x65,0x33,0x64,
0x12,0x42,0x0a,0x0b,0x74,0x72,0x61,0x6e,0x73,0x6c,
0x61,0x74,0x69,0x6f,0x6e,0x18,0x01,0x20,0x01,0x28,
0x0b,0x32,0x20,0x2e,0x77,0x70,0x69,0x2e,0x70,0x72,
0x6f,0x74,0x6f,0x2e,0x50,0x72,0x6f,0x74,0x6f,0x62,
0x75,0x66,0x54,0x72,0x61,0x6e,0x73,0x6c,0x61,0x74,
0x69,0x6f,0x6e,0x33,0x64,0x52,0x0b,0x74,0x72,0x61,
0x6e,0x73,0x6c,0x61,0x74,0x69,0x6f,0x6e,0x12,0x39,
0x0a,0x08,0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,
0x18,0x02,0x20,0x01,0x28,0x0b,0x32,0x1d,0x2e,0x77,
0x70,0x69,0x2e,0x70,0x72,0x6f,0x74,0x6f,0x2e,0x50,
0x72,0x6f,0x74,0x6f,0x62,0x75,0x66,0x52,0x6f,0x74,
0x61,0x74,0x69,0x6f,0x6e,0x33,0x64,0x52,0x08,0x72,
0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,0x22,0x94,0x01,
0x0a,0x13,0x50,0x72,0x6f,0x74,0x6f,0x62,0x75,0x66,
0x54,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x33,
0x64,0x12,0x42,0x0a,0x0b,0x74,0x72,0x61,0x6e,0x73,
0x6c,0x61,0x74,0x69,0x6f,0x6e,0x18,0x01,0x20,0x01,
0x28,0x0b,0x32,0x20,0x2e,0x77,0x70,0x69,0x2e,0x70,
0x72,0x6f,0x74,0x6f,0x2e,0x50,0x72,0x6f,0x74,0x6f,
0x62,0x75,0x66,0x54,0x72,0x61,0x6e,0x73,0x6c,0x61,
0x74,0x69,0x6f,0x6e,0x33,0x64,0x52,0x0b,0x74,0x72,
0x61,0x6e,0x73,0x6c,0x61,0x74,0x69,0x6f,0x6e,0x12,
0x39,0x0a,0x08,0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,
0x6e,0x18,0x02,0x20,0x01,0x28,0x0b,0x32,0x1d,0x2e,
0x77,0x70,0x69,0x2e,0x70,0x72,0x6f,0x74,0x6f,0x2e,
0x50,0x72,0x6f,0x74,0x6f,0x62,0x75,0x66,0x52,0x6f,
0x74,0x61,0x74,0x69,0x6f,0x6e,0x33,0x64,0x52,0x08,
0x72,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,0x22,0x71,
0x0a,0x0f,0x50,0x72,0x6f,0x74,0x6f,0x62,0x75,0x66,
0x54,0x77,0x69,0x73,0x74,0x33,0x64,0x12,0x0e,0x0a,
0x02,0x64,0x78,0x18,0x01,0x20,0x01,0x28,0x01,0x52,
0x02,0x64,0x78,0x12,0x0e,0x0a,0x02,0x64,0x79,0x18,
0x02,0x20,0x01,0x28,0x01,0x52,0x02,0x64,0x79,0x12,
0x0e,0x0a,0x02,0x64,0x7a,0x18,0x03,0x20,0x01,0x28,
0x01,0x52,0x02,0x64,0x7a,0x12,0x0e,0x0a,0x02,0x72,
0x78,0x18,0x04,0x20,0x01,0x28,0x01,0x52,0x02,0x72,
0x78,0x12,0x0e,0x0a,0x02,0x72,0x79,0x18,0x05,0x20,
0x01,0x28,0x01,0x52,0x02,0x72,0x79,0x12,0x0e,0x0a,
0x02,0x72,0x7a,0x18,0x06,0x20,0x01,0x28,0x01,0x52,
0x02,0x72,0x7a,0x42,0x17,0x0a,0x15,0x6f,0x72,0x67,
0x2e,0x77,0x70,0x69,0x6c,0x69,0x62,0x2e,0x6d,0x61,
0x74,0x68,0x2e,0x70,0x72,0x6f,0x74,0x6f,0x4a,0x9f,
0x09,0x0a,0x06,0x12,0x04,0x00,0x00,0x28,0x01,0x0a,
0x08,0x0a,0x01,0x0c,0x12,0x03,0x00,0x00,0x12,0x0a,
0x08,0x0a,0x01,0x02,0x12,0x03,0x02,0x00,0x12,0x0a,
0x08,0x0a,0x01,0x08,0x12,0x03,0x04,0x00,0x2e,0x0a,
0x09,0x0a,0x02,0x08,0x01,0x12,0x03,0x04,0x00,0x2e,
0x0a,0x0a,0x0a,0x02,0x04,0x00,0x12,0x04,0x06,0x00,
0x0a,0x01,0x0a,0x0a,0x0a,0x03,0x04,0x00,0x01,0x12,
0x03,0x06,0x08,0x1d,0x0a,0x0b,0x0a,0x04,0x04,0x00,
0x02,0x00,0x12,0x03,0x07,0x02,0x0f,0x0a,0x0c,0x0a,
0x05,0x04,0x00,0x02,0x00,0x05,0x12,0x03,0x07,0x02,
0x08,0x0a,0x0c,0x0a,0x05,0x04,0x00,0x02,0x00,0x01,
0x12,0x03,0x07,0x09,0x0a,0x0a,0x0c,0x0a,0x05,0x04,
0x00,0x02,0x00,0x03,0x12,0x03,0x07,0x0d,0x0e,0x0a,
0x0b,0x0a,0x04,0x04,0x00,0x02,0x01,0x12,0x03,0x08,
0x02,0x0f,0x0a,0x0c,0x0a,0x05,0x04,0x00,0x02,0x01,
0x05,0x12,0x03,0x08,0x02,0x08,0x0a,0x0c,0x0a,0x05,
0x04,0x00,0x02,0x01,0x01,0x12,0x03,0x08,0x09,0x0a,
0x0a,0x0c,0x0a,0x05,0x04,0x00,0x02,0x01,0x03,0x12,
0x03,0x08,0x0d,0x0e,0x0a,0x0b,0x0a,0x04,0x04,0x00,
0x02,0x02,0x12,0x03,0x09,0x02,0x0f,0x0a,0x0c,0x0a,
0x05,0x04,0x00,0x02,0x02,0x05,0x12,0x03,0x09,0x02,
0x08,0x0a,0x0c,0x0a,0x05,0x04,0x00,0x02,0x02,0x01,
0x12,0x03,0x09,0x09,0x0a,0x0a,0x0c,0x0a,0x05,0x04,
0x00,0x02,0x02,0x03,0x12,0x03,0x09,0x0d,0x0e,0x0a,
0x0a,0x0a,0x02,0x04,0x01,0x12,0x04,0x0c,0x00,0x11,
0x01,0x0a,0x0a,0x0a,0x03,0x04,0x01,0x01,0x12,0x03,
0x0c,0x08,0x1a,0x0a,0x0b,0x0a,0x04,0x04,0x01,0x02,
0x00,0x12,0x03,0x0d,0x02,0x0f,0x0a,0x0c,0x0a,0x05,
0x04,0x01,0x02,0x00,0x05,0x12,0x03,0x0d,0x02,0x08,
0x0a,0x0c,0x0a,0x05,0x04,0x01,0x02,0x00,0x01,0x12,
0x03,0x0d,0x09,0x0a,0x0a,0x0c,0x0a,0x05,0x04,0x01,
0x02,0x00,0x03,0x12,0x03,0x0d,0x0d,0x0e,0x0a,0x0b,
0x0a,0x04,0x04,0x01,0x02,0x01,0x12,0x03,0x0e,0x02,
0x0f,0x0a,0x0c,0x0a,0x05,0x04,0x01,0x02,0x01,0x05,
0x12,0x03,0x0e,0x02,0x08,0x0a,0x0c,0x0a,0x05,0x04,
0x01,0x02,0x01,0x01,0x12,0x03,0x0e,0x09,0x0a,0x0a,
0x0c,0x0a,0x05,0x04,0x01,0x02,0x01,0x03,0x12,0x03,
0x0e,0x0d,0x0e,0x0a,0x0b,0x0a,0x04,0x04,0x01,0x02,
0x02,0x12,0x03,0x0f,0x02,0x0f,0x0a,0x0c,0x0a,0x05,
0x04,0x01,0x02,0x02,0x05,0x12,0x03,0x0f,0x02,0x08,
0x0a,0x0c,0x0a,0x05,0x04,0x01,0x02,0x02,0x01,0x12,
0x03,0x0f,0x09,0x0a,0x0a,0x0c,0x0a,0x05,0x04,0x01,
0x02,0x02,0x03,0x12,0x03,0x0f,0x0d,0x0e,0x0a,0x0b,
0x0a,0x04,0x04,0x01,0x02,0x03,0x12,0x03,0x10,0x02,
0x0f,0x0a,0x0c,0x0a,0x05,0x04,0x01,0x02,0x03,0x05,
0x12,0x03,0x10,0x02,0x08,0x0a,0x0c,0x0a,0x05,0x04,
0x01,0x02,0x03,0x01,0x12,0x03,0x10,0x09,0x0a,0x0a,
0x0c,0x0a,0x05,0x04,0x01,0x02,0x03,0x03,0x12,0x03,
0x10,0x0d,0x0e,0x0a,0x0a,0x0a,0x02,0x04,0x02,0x12,
0x04,0x13,0x00,0x15,0x01,0x0a,0x0a,0x0a,0x03,0x04,
0x02,0x01,0x12,0x03,0x13,0x08,0x1a,0x0a,0x0b,0x0a,
0x04,0x04,0x02,0x02,0x00,0x12,0x03,0x14,0x02,0x1b,
0x0a,0x0c,0x0a,0x05,0x04,0x02,0x02,0x00,0x06,0x12,
0x03,0x14,0x02,0x14,0x0a,0x0c,0x0a,0x05,0x04,0x02,
0x02,0x00,0x01,0x12,0x03,0x14,0x15,0x16,0x0a,0x0c,
0x0a,0x05,0x04,0x02,0x02,0x00,0x03,0x12,0x03,0x14,
0x19,0x1a,0x0a,0x0a,0x0a,0x02,0x04,0x03,0x12,0x04,
0x17,0x00,0x1a,0x01,0x0a,0x0a,0x0a,0x03,0x04,0x03,
0x01,0x12,0x03,0x17,0x08,0x16,0x0a,0x0b,0x0a,0x04,
0x04,0x03,0x02,0x00,0x12,0x03,0x18,0x02,0x28,0x0a,
0x0c,0x0a,0x05,0x04,0x03,0x02,0x00,0x06,0x12,0x03,
0x18,0x02,0x17,0x0a,0x0c,0x0a,0x05,0x04,0x03,0x02,
0x00,0x01,0x12,0x03,0x18,0x18,0x23,0x0a,0x0c,0x0a,
0x05,0x04,0x03,0x02,0x00,0x03,0x12,0x03,0x18,0x26,
0x27,0x0a,0x0b,0x0a,0x04,0x04,0x03,0x02,0x01,0x12,
0x03,0x19,0x02,0x22,0x0a,0x0c,0x0a,0x05,0x04,0x03,
0x02,0x01,0x06,0x12,0x03,0x19,0x02,0x14,0x0a,0x0c,
0x0a,0x05,0x04,0x03,0x02,0x01,0x01,0x12,0x03,0x19,
0x15,0x1d,0x0a,0x0c,0x0a,0x05,0x04,0x03,0x02,0x01,
0x03,0x12,0x03,0x19,0x20,0x21,0x0a,0x0a,0x0a,0x02,
0x04,0x04,0x12,0x04,0x1c,0x00,0x1f,0x01,0x0a,0x0a,
0x0a,0x03,0x04,0x04,0x01,0x12,0x03,0x1c,0x08,0x1b,
0x0a,0x0b,0x0a,0x04,0x04,0x04,0x02,0x00,0x12,0x03,
0x1d,0x02,0x28,0x0a,0x0c,0x0a,0x05,0x04,0x04,0x02,
0x00,0x06,0x12,0x03,0x1d,0x02,0x17,0x0a,0x0c,0x0a,
0x05,0x04,0x04,0x02,0x00,0x01,0x12,0x03,0x1d,0x18,
0x23,0x0a,0x0c,0x0a,0x05,0x04,0x04,0x02,0x00,0x03,
0x12,0x03,0x1d,0x26,0x27,0x0a,0x0b,0x0a,0x04,0x04,
0x04,0x02,0x01,0x12,0x03,0x1e,0x02,0x22,0x0a,0x0c,
0x0a,0x05,0x04,0x04,0x02,0x01,0x06,0x12,0x03,0x1e,
0x02,0x14,0x0a,0x0c,0x0a,0x05,0x04,0x04,0x02,0x01,
0x01,0x12,0x03,0x1e,0x15,0x1d,0x0a,0x0c,0x0a,0x05,
0x04,0x04,0x02,0x01,0x03,0x12,0x03,0x1e,0x20,0x21,
0x0a,0x0a,0x0a,0x02,0x04,0x05,0x12,0x04,0x21,0x00,
0x28,0x01,0x0a,0x0a,0x0a,0x03,0x04,0x05,0x01,0x12,
0x03,0x21,0x08,0x17,0x0a,0x0b,0x0a,0x04,0x04,0x05,
0x02,0x00,0x12,0x03,0x22,0x02,0x10,0x0a,0x0c,0x0a,
0x05,0x04,0x05,0x02,0x00,0x05,0x12,0x03,0x22,0x02,
0x08,0x0a,0x0c,0x0a,0x05,0x04,0x05,0x02,0x00,0x01,
0x12,0x03,0x22,0x09,0x0b,0x0a,0x0c,0x0a,0x05,0x04,
0x05,0x02,0x00,0x03,0x12,0x03,0x22,0x0e,0x0f,0x0a,
0x0b,0x0a,0x04,0x04,0x05,0x02,0x01,0x12,0x03,0x23,
0x02,0x10,0x0a,0x0c,0x0a,0x05,0x04,0x05,0x02,0x01,
0x05,0x12,0x03,0x23,0x02,0x08,0x0a,0x0c,0x0a,0x05,
0x04,0x05,0x02,0x01,0x01,0x12,0x03,0x23,0x09,0x0b,
0x0a,0x0c,0x0a,0x05,0x04,0x05,0x02,0x01,0x03,0x12,
0x03,0x23,0x0e,0x0f,0x0a,0x0b,0x0a,0x04,0x04,0x05,
0x02,0x02,0x12,0x03,0x24,0x02,0x10,0x0a,0x0c,0x0a,
0x05,0x04,0x05,0x02,0x02,0x05,0x12,0x03,0x24,0x02,
0x08,0x0a,0x0c,0x0a,0x05,0x04,0x05,0x02,0x02,0x01,
0x12,0x03,0x24,0x09,0x0b,0x0a,0x0c,0x0a,0x05,0x04,
0x05,0x02,0x02,0x03,0x12,0x03,0x24,0x0e,0x0f,0x0a,
0x0b,0x0a,0x04,0x04,0x05,0x02,0x03,0x12,0x03,0x25,
0x02,0x10,0x0a,0x0c,0x0a,0x05,0x04,0x05,0x02,0x03,
0x05,0x12,0x03,0x25,0x02,0x08,0x0a,0x0c,0x0a,0x05,
0x04,0x05,0x02,0x03,0x01,0x12,0x03,0x25,0x09,0x0b,
0x0a,0x0c,0x0a,0x05,0x04,0x05,0x02,0x03,0x03,0x12,
0x03,0x25,0x0e,0x0f,0x0a,0x0b,0x0a,0x04,0x04,0x05,
0x02,0x04,0x12,0x03,0x26,0x02,0x10,0x0a,0x0c,0x0a,
0x05,0x04,0x05,0x02,0x04,0x05,0x12,0x03,0x26,0x02,
0x08,0x0a,0x0c,0x0a,0x05,0x04,0x05,0x02,0x04,0x01,
0x12,0x03,0x26,0x09,0x0b,0x0a,0x0c,0x0a,0x05,0x04,
0x05,0x02,0x04,0x03,0x12,0x03,0x26,0x0e,0x0f,0x0a,
0x0b,0x0a,0x04,0x04,0x05,0x02,0x05,0x12,0x03,0x27,
0x02,0x10,0x0a,0x0c,0x0a,0x05,0x04,0x05,0x02,0x05,
0x05,0x12,0x03,0x27,0x02,0x08,0x0a,0x0c,0x0a,0x05,
0x04,0x05,0x02,0x05,0x01,0x12,0x03,0x27,0x09,0x0b,
0x0a,0x0c,0x0a,0x05,0x04,0x05,0x02,0x05,0x03,0x12,
0x03,0x27,0x0e,0x0f,0x62,0x06,0x70,0x72,0x6f,0x74,
0x6f,0x33,
};
static const char file_name[] = "geometry3d.proto";
static const char wpi_proto_ProtobufTranslation3d_name[] = "wpi.proto.ProtobufTranslation3d";
std::string_view wpi_proto_ProtobufTranslation3d::msg_name(void) noexcept { return wpi_proto_ProtobufTranslation3d_name; }
pb_filedesc_t wpi_proto_ProtobufTranslation3d::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufTranslation3d, wpi_proto_ProtobufTranslation3d, AUTO)


static const char wpi_proto_ProtobufQuaternion_name[] = "wpi.proto.ProtobufQuaternion";
std::string_view wpi_proto_ProtobufQuaternion::msg_name(void) noexcept { return wpi_proto_ProtobufQuaternion_name; }
pb_filedesc_t wpi_proto_ProtobufQuaternion::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufQuaternion, wpi_proto_ProtobufQuaternion, AUTO)


static const char wpi_proto_ProtobufRotation3d_name[] = "wpi.proto.ProtobufRotation3d";
std::string_view wpi_proto_ProtobufRotation3d::msg_name(void) noexcept { return wpi_proto_ProtobufRotation3d_name; }
pb_filedesc_t wpi_proto_ProtobufRotation3d::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufRotation3d, wpi_proto_ProtobufRotation3d, AUTO)


static const char wpi_proto_ProtobufPose3d_name[] = "wpi.proto.ProtobufPose3d";
std::string_view wpi_proto_ProtobufPose3d::msg_name(void) noexcept { return wpi_proto_ProtobufPose3d_name; }
pb_filedesc_t wpi_proto_ProtobufPose3d::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufPose3d, wpi_proto_ProtobufPose3d, AUTO)


static const char wpi_proto_ProtobufTransform3d_name[] = "wpi.proto.ProtobufTransform3d";
std::string_view wpi_proto_ProtobufTransform3d::msg_name(void) noexcept { return wpi_proto_ProtobufTransform3d_name; }
pb_filedesc_t wpi_proto_ProtobufTransform3d::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufTransform3d, wpi_proto_ProtobufTransform3d, AUTO)


static const char wpi_proto_ProtobufTwist3d_name[] = "wpi.proto.ProtobufTwist3d";
std::string_view wpi_proto_ProtobufTwist3d::msg_name(void) noexcept { return wpi_proto_ProtobufTwist3d_name; }
pb_filedesc_t wpi_proto_ProtobufTwist3d::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufTwist3d, wpi_proto_ProtobufTwist3d, AUTO)



#ifndef PB_CONVERT_DOUBLE_FLOAT
/* On some platforms (such as AVR), double is really float.
 * To be able to encode/decode double on these platforms, you need.
 * to define PB_CONVERT_DOUBLE_FLOAT in pb.h or compiler command line.
 */
PB_STATIC_ASSERT(sizeof(double) == 8, DOUBLE_MUST_BE_8_BYTES)
#endif

