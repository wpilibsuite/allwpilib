// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.
/* Automatically generated nanopb constant definitions */
/* Generated by nanopb-0.4.9 */

#include "kinematics.npb.h"
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#include <span>
#include <string_view>
static const uint8_t file_descriptor[] {
0x0a,0x10,0x6b,0x69,0x6e,0x65,0x6d,0x61,0x74,0x69,
0x63,0x73,0x2e,0x70,0x72,0x6f,0x74,0x6f,0x12,0x09,
0x77,0x70,0x69,0x2e,0x70,0x72,0x6f,0x74,0x6f,0x1a,
0x10,0x67,0x65,0x6f,0x6d,0x65,0x74,0x72,0x79,0x32,
0x64,0x2e,0x70,0x72,0x6f,0x74,0x6f,0x22,0x4d,0x0a,
0x15,0x50,0x72,0x6f,0x74,0x6f,0x62,0x75,0x66,0x43,
0x68,0x61,0x73,0x73,0x69,0x73,0x53,0x70,0x65,0x65,
0x64,0x73,0x12,0x0e,0x0a,0x02,0x76,0x78,0x18,0x01,
0x20,0x01,0x28,0x01,0x52,0x02,0x76,0x78,0x12,0x0e,
0x0a,0x02,0x76,0x79,0x18,0x02,0x20,0x01,0x28,0x01,
0x52,0x02,0x76,0x79,0x12,0x14,0x0a,0x05,0x6f,0x6d,
0x65,0x67,0x61,0x18,0x03,0x20,0x01,0x28,0x01,0x52,
0x05,0x6f,0x6d,0x65,0x67,0x61,0x22,0x45,0x0a,0x23,
0x50,0x72,0x6f,0x74,0x6f,0x62,0x75,0x66,0x44,0x69,
0x66,0x66,0x65,0x72,0x65,0x6e,0x74,0x69,0x61,0x6c,
0x44,0x72,0x69,0x76,0x65,0x4b,0x69,0x6e,0x65,0x6d,
0x61,0x74,0x69,0x63,0x73,0x12,0x1e,0x0a,0x0a,0x74,
0x72,0x61,0x63,0x6b,0x77,0x69,0x64,0x74,0x68,0x18,
0x01,0x20,0x01,0x28,0x01,0x52,0x0a,0x74,0x72,0x61,
0x63,0x6b,0x77,0x69,0x64,0x74,0x68,0x22,0x50,0x0a,
0x24,0x50,0x72,0x6f,0x74,0x6f,0x62,0x75,0x66,0x44,
0x69,0x66,0x66,0x65,0x72,0x65,0x6e,0x74,0x69,0x61,
0x6c,0x44,0x72,0x69,0x76,0x65,0x57,0x68,0x65,0x65,
0x6c,0x53,0x70,0x65,0x65,0x64,0x73,0x12,0x12,0x0a,
0x04,0x6c,0x65,0x66,0x74,0x18,0x01,0x20,0x01,0x28,
0x01,0x52,0x04,0x6c,0x65,0x66,0x74,0x12,0x14,0x0a,
0x05,0x72,0x69,0x67,0x68,0x74,0x18,0x02,0x20,0x01,
0x28,0x01,0x52,0x05,0x72,0x69,0x67,0x68,0x74,0x22,
0x53,0x0a,0x27,0x50,0x72,0x6f,0x74,0x6f,0x62,0x75,
0x66,0x44,0x69,0x66,0x66,0x65,0x72,0x65,0x6e,0x74,
0x69,0x61,0x6c,0x44,0x72,0x69,0x76,0x65,0x57,0x68,
0x65,0x65,0x6c,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
0x6e,0x73,0x12,0x12,0x0a,0x04,0x6c,0x65,0x66,0x74,
0x18,0x01,0x20,0x01,0x28,0x01,0x52,0x04,0x6c,0x65,
0x66,0x74,0x12,0x14,0x0a,0x05,0x72,0x69,0x67,0x68,
0x74,0x18,0x02,0x20,0x01,0x28,0x01,0x52,0x05,0x72,
0x69,0x67,0x68,0x74,0x22,0xa4,0x02,0x0a,0x1e,0x50,
0x72,0x6f,0x74,0x6f,0x62,0x75,0x66,0x4d,0x65,0x63,
0x61,0x6e,0x75,0x6d,0x44,0x72,0x69,0x76,0x65,0x4b,
0x69,0x6e,0x65,0x6d,0x61,0x74,0x69,0x63,0x73,0x12,
0x3f,0x0a,0x0a,0x66,0x72,0x6f,0x6e,0x74,0x5f,0x6c,
0x65,0x66,0x74,0x18,0x01,0x20,0x01,0x28,0x0b,0x32,
0x20,0x2e,0x77,0x70,0x69,0x2e,0x70,0x72,0x6f,0x74,
0x6f,0x2e,0x50,0x72,0x6f,0x74,0x6f,0x62,0x75,0x66,
0x54,0x72,0x61,0x6e,0x73,0x6c,0x61,0x74,0x69,0x6f,
0x6e,0x32,0x64,0x52,0x09,0x66,0x72,0x6f,0x6e,0x74,
0x4c,0x65,0x66,0x74,0x12,0x41,0x0a,0x0b,0x66,0x72,
0x6f,0x6e,0x74,0x5f,0x72,0x69,0x67,0x68,0x74,0x18,
0x02,0x20,0x01,0x28,0x0b,0x32,0x20,0x2e,0x77,0x70,
0x69,0x2e,0x70,0x72,0x6f,0x74,0x6f,0x2e,0x50,0x72,
0x6f,0x74,0x6f,0x62,0x75,0x66,0x54,0x72,0x61,0x6e,
0x73,0x6c,0x61,0x74,0x69,0x6f,0x6e,0x32,0x64,0x52,
0x0a,0x66,0x72,0x6f,0x6e,0x74,0x52,0x69,0x67,0x68,
0x74,0x12,0x3d,0x0a,0x09,0x72,0x65,0x61,0x72,0x5f,
0x6c,0x65,0x66,0x74,0x18,0x03,0x20,0x01,0x28,0x0b,
0x32,0x20,0x2e,0x77,0x70,0x69,0x2e,0x70,0x72,0x6f,
0x74,0x6f,0x2e,0x50,0x72,0x6f,0x74,0x6f,0x62,0x75,
0x66,0x54,0x72,0x61,0x6e,0x73,0x6c,0x61,0x74,0x69,
0x6f,0x6e,0x32,0x64,0x52,0x08,0x72,0x65,0x61,0x72,
0x4c,0x65,0x66,0x74,0x12,0x3f,0x0a,0x0a,0x72,0x65,
0x61,0x72,0x5f,0x72,0x69,0x67,0x68,0x74,0x18,0x04,
0x20,0x01,0x28,0x0b,0x32,0x20,0x2e,0x77,0x70,0x69,
0x2e,0x70,0x72,0x6f,0x74,0x6f,0x2e,0x50,0x72,0x6f,
0x74,0x6f,0x62,0x75,0x66,0x54,0x72,0x61,0x6e,0x73,
0x6c,0x61,0x74,0x69,0x6f,0x6e,0x32,0x64,0x52,0x09,
0x72,0x65,0x61,0x72,0x52,0x69,0x67,0x68,0x74,0x22,
0xa0,0x01,0x0a,0x22,0x50,0x72,0x6f,0x74,0x6f,0x62,
0x75,0x66,0x4d,0x65,0x63,0x61,0x6e,0x75,0x6d,0x44,
0x72,0x69,0x76,0x65,0x57,0x68,0x65,0x65,0x6c,0x50,
0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x73,0x12,0x1d,
0x0a,0x0a,0x66,0x72,0x6f,0x6e,0x74,0x5f,0x6c,0x65,
0x66,0x74,0x18,0x01,0x20,0x01,0x28,0x01,0x52,0x09,
0x66,0x72,0x6f,0x6e,0x74,0x4c,0x65,0x66,0x74,0x12,
0x1f,0x0a,0x0b,0x66,0x72,0x6f,0x6e,0x74,0x5f,0x72,
0x69,0x67,0x68,0x74,0x18,0x02,0x20,0x01,0x28,0x01,
0x52,0x0a,0x66,0x72,0x6f,0x6e,0x74,0x52,0x69,0x67,
0x68,0x74,0x12,0x1b,0x0a,0x09,0x72,0x65,0x61,0x72,
0x5f,0x6c,0x65,0x66,0x74,0x18,0x03,0x20,0x01,0x28,
0x01,0x52,0x08,0x72,0x65,0x61,0x72,0x4c,0x65,0x66,
0x74,0x12,0x1d,0x0a,0x0a,0x72,0x65,0x61,0x72,0x5f,
0x72,0x69,0x67,0x68,0x74,0x18,0x04,0x20,0x01,0x28,
0x01,0x52,0x09,0x72,0x65,0x61,0x72,0x52,0x69,0x67,
0x68,0x74,0x22,0x9d,0x01,0x0a,0x1f,0x50,0x72,0x6f,
0x74,0x6f,0x62,0x75,0x66,0x4d,0x65,0x63,0x61,0x6e,
0x75,0x6d,0x44,0x72,0x69,0x76,0x65,0x57,0x68,0x65,
0x65,0x6c,0x53,0x70,0x65,0x65,0x64,0x73,0x12,0x1d,
0x0a,0x0a,0x66,0x72,0x6f,0x6e,0x74,0x5f,0x6c,0x65,
0x66,0x74,0x18,0x01,0x20,0x01,0x28,0x01,0x52,0x09,
0x66,0x72,0x6f,0x6e,0x74,0x4c,0x65,0x66,0x74,0x12,
0x1f,0x0a,0x0b,0x66,0x72,0x6f,0x6e,0x74,0x5f,0x72,
0x69,0x67,0x68,0x74,0x18,0x02,0x20,0x01,0x28,0x01,
0x52,0x0a,0x66,0x72,0x6f,0x6e,0x74,0x52,0x69,0x67,
0x68,0x74,0x12,0x1b,0x0a,0x09,0x72,0x65,0x61,0x72,
0x5f,0x6c,0x65,0x66,0x74,0x18,0x03,0x20,0x01,0x28,
0x01,0x52,0x08,0x72,0x65,0x61,0x72,0x4c,0x65,0x66,
0x74,0x12,0x1d,0x0a,0x0a,0x72,0x65,0x61,0x72,0x5f,
0x72,0x69,0x67,0x68,0x74,0x18,0x04,0x20,0x01,0x28,
0x01,0x52,0x09,0x72,0x65,0x61,0x72,0x52,0x69,0x67,
0x68,0x74,0x22,0x5b,0x0a,0x1d,0x50,0x72,0x6f,0x74,
0x6f,0x62,0x75,0x66,0x53,0x77,0x65,0x72,0x76,0x65,
0x44,0x72,0x69,0x76,0x65,0x4b,0x69,0x6e,0x65,0x6d,
0x61,0x74,0x69,0x63,0x73,0x12,0x3a,0x0a,0x07,0x6d,
0x6f,0x64,0x75,0x6c,0x65,0x73,0x18,0x01,0x20,0x03,
0x28,0x0b,0x32,0x20,0x2e,0x77,0x70,0x69,0x2e,0x70,
0x72,0x6f,0x74,0x6f,0x2e,0x50,0x72,0x6f,0x74,0x6f,
0x62,0x75,0x66,0x54,0x72,0x61,0x6e,0x73,0x6c,0x61,
0x74,0x69,0x6f,0x6e,0x32,0x64,0x52,0x07,0x6d,0x6f,
0x64,0x75,0x6c,0x65,0x73,0x22,0x6f,0x0a,0x1c,0x50,
0x72,0x6f,0x74,0x6f,0x62,0x75,0x66,0x53,0x77,0x65,
0x72,0x76,0x65,0x4d,0x6f,0x64,0x75,0x6c,0x65,0x50,
0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x12,0x1a,0x0a,
0x08,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,0x18,
0x01,0x20,0x01,0x28,0x01,0x52,0x08,0x64,0x69,0x73,
0x74,0x61,0x6e,0x63,0x65,0x12,0x33,0x0a,0x05,0x61,
0x6e,0x67,0x6c,0x65,0x18,0x02,0x20,0x01,0x28,0x0b,
0x32,0x1d,0x2e,0x77,0x70,0x69,0x2e,0x70,0x72,0x6f,
0x74,0x6f,0x2e,0x50,0x72,0x6f,0x74,0x6f,0x62,0x75,
0x66,0x52,0x6f,0x74,0x61,0x74,0x69,0x6f,0x6e,0x32,
0x64,0x52,0x05,0x61,0x6e,0x67,0x6c,0x65,0x22,0x66,
0x0a,0x19,0x50,0x72,0x6f,0x74,0x6f,0x62,0x75,0x66,
0x53,0x77,0x65,0x72,0x76,0x65,0x4d,0x6f,0x64,0x75,
0x6c,0x65,0x53,0x74,0x61,0x74,0x65,0x12,0x14,0x0a,
0x05,0x73,0x70,0x65,0x65,0x64,0x18,0x01,0x20,0x01,
0x28,0x01,0x52,0x05,0x73,0x70,0x65,0x65,0x64,0x12,
0x33,0x0a,0x05,0x61,0x6e,0x67,0x6c,0x65,0x18,0x02,
0x20,0x01,0x28,0x0b,0x32,0x1d,0x2e,0x77,0x70,0x69,
0x2e,0x70,0x72,0x6f,0x74,0x6f,0x2e,0x50,0x72,0x6f,
0x74,0x6f,0x62,0x75,0x66,0x52,0x6f,0x74,0x61,0x74,
0x69,0x6f,0x6e,0x32,0x64,0x52,0x05,0x61,0x6e,0x67,
0x6c,0x65,0x42,0x1a,0x0a,0x18,0x65,0x64,0x75,0x2e,
0x77,0x70,0x69,0x2e,0x66,0x69,0x72,0x73,0x74,0x2e,
0x6d,0x61,0x74,0x68,0x2e,0x70,0x72,0x6f,0x74,0x6f,
0x4a,0x99,0x0d,0x0a,0x06,0x12,0x04,0x00,0x00,0x3d,
0x01,0x0a,0x08,0x0a,0x01,0x0c,0x12,0x03,0x00,0x00,
0x12,0x0a,0x08,0x0a,0x01,0x02,0x12,0x03,0x02,0x00,
0x12,0x0a,0x09,0x0a,0x02,0x03,0x00,0x12,0x03,0x04,
0x00,0x1a,0x0a,0x08,0x0a,0x01,0x08,0x12,0x03,0x06,
0x00,0x31,0x0a,0x09,0x0a,0x02,0x08,0x01,0x12,0x03,
0x06,0x00,0x31,0x0a,0x0a,0x0a,0x02,0x04,0x00,0x12,
0x04,0x08,0x00,0x0c,0x01,0x0a,0x0a,0x0a,0x03,0x04,
0x00,0x01,0x12,0x03,0x08,0x08,0x1d,0x0a,0x0b,0x0a,
0x04,0x04,0x00,0x02,0x00,0x12,0x03,0x09,0x02,0x10,
0x0a,0x0c,0x0a,0x05,0x04,0x00,0x02,0x00,0x05,0x12,
0x03,0x09,0x02,0x08,0x0a,0x0c,0x0a,0x05,0x04,0x00,
0x02,0x00,0x01,0x12,0x03,0x09,0x09,0x0b,0x0a,0x0c,
0x0a,0x05,0x04,0x00,0x02,0x00,0x03,0x12,0x03,0x09,
0x0e,0x0f,0x0a,0x0b,0x0a,0x04,0x04,0x00,0x02,0x01,
0x12,0x03,0x0a,0x02,0x10,0x0a,0x0c,0x0a,0x05,0x04,
0x00,0x02,0x01,0x05,0x12,0x03,0x0a,0x02,0x08,0x0a,
0x0c,0x0a,0x05,0x04,0x00,0x02,0x01,0x01,0x12,0x03,
0x0a,0x09,0x0b,0x0a,0x0c,0x0a,0x05,0x04,0x00,0x02,
0x01,0x03,0x12,0x03,0x0a,0x0e,0x0f,0x0a,0x0b,0x0a,
0x04,0x04,0x00,0x02,0x02,0x12,0x03,0x0b,0x02,0x13,
0x0a,0x0c,0x0a,0x05,0x04,0x00,0x02,0x02,0x05,0x12,
0x03,0x0b,0x02,0x08,0x0a,0x0c,0x0a,0x05,0x04,0x00,
0x02,0x02,0x01,0x12,0x03,0x0b,0x09,0x0e,0x0a,0x0c,
0x0a,0x05,0x04,0x00,0x02,0x02,0x03,0x12,0x03,0x0b,
0x11,0x12,0x0a,0x0a,0x0a,0x02,0x04,0x01,0x12,0x04,
0x0e,0x00,0x10,0x01,0x0a,0x0a,0x0a,0x03,0x04,0x01,
0x01,0x12,0x03,0x0e,0x08,0x2b,0x0a,0x0b,0x0a,0x04,
0x04,0x01,0x02,0x00,0x12,0x03,0x0f,0x02,0x18,0x0a,
0x0c,0x0a,0x05,0x04,0x01,0x02,0x00,0x05,0x12,0x03,
0x0f,0x02,0x08,0x0a,0x0c,0x0a,0x05,0x04,0x01,0x02,
0x00,0x01,0x12,0x03,0x0f,0x09,0x13,0x0a,0x0c,0x0a,
0x05,0x04,0x01,0x02,0x00,0x03,0x12,0x03,0x0f,0x16,
0x17,0x0a,0x0a,0x0a,0x02,0x04,0x02,0x12,0x04,0x12,
0x00,0x15,0x01,0x0a,0x0a,0x0a,0x03,0x04,0x02,0x01,
0x12,0x03,0x12,0x08,0x2c,0x0a,0x0b,0x0a,0x04,0x04,
0x02,0x02,0x00,0x12,0x03,0x13,0x02,0x12,0x0a,0x0c,
0x0a,0x05,0x04,0x02,0x02,0x00,0x05,0x12,0x03,0x13,
0x02,0x08,0x0a,0x0c,0x0a,0x05,0x04,0x02,0x02,0x00,
0x01,0x12,0x03,0x13,0x09,0x0d,0x0a,0x0c,0x0a,0x05,
0x04,0x02,0x02,0x00,0x03,0x12,0x03,0x13,0x10,0x11,
0x0a,0x0b,0x0a,0x04,0x04,0x02,0x02,0x01,0x12,0x03,
0x14,0x02,0x13,0x0a,0x0c,0x0a,0x05,0x04,0x02,0x02,
0x01,0x05,0x12,0x03,0x14,0x02,0x08,0x0a,0x0c,0x0a,
0x05,0x04,0x02,0x02,0x01,0x01,0x12,0x03,0x14,0x09,
0x0e,0x0a,0x0c,0x0a,0x05,0x04,0x02,0x02,0x01,0x03,
0x12,0x03,0x14,0x11,0x12,0x0a,0x0a,0x0a,0x02,0x04,
0x03,0x12,0x04,0x17,0x00,0x1a,0x01,0x0a,0x0a,0x0a,
0x03,0x04,0x03,0x01,0x12,0x03,0x17,0x08,0x2f,0x0a,
0x0b,0x0a,0x04,0x04,0x03,0x02,0x00,0x12,0x03,0x18,
0x02,0x12,0x0a,0x0c,0x0a,0x05,0x04,0x03,0x02,0x00,
0x05,0x12,0x03,0x18,0x02,0x08,0x0a,0x0c,0x0a,0x05,
0x04,0x03,0x02,0x00,0x01,0x12,0x03,0x18,0x09,0x0d,
0x0a,0x0c,0x0a,0x05,0x04,0x03,0x02,0x00,0x03,0x12,
0x03,0x18,0x10,0x11,0x0a,0x0b,0x0a,0x04,0x04,0x03,
0x02,0x01,0x12,0x03,0x19,0x02,0x13,0x0a,0x0c,0x0a,
0x05,0x04,0x03,0x02,0x01,0x05,0x12,0x03,0x19,0x02,
0x08,0x0a,0x0c,0x0a,0x05,0x04,0x03,0x02,0x01,0x01,
0x12,0x03,0x19,0x09,0x0e,0x0a,0x0c,0x0a,0x05,0x04,
0x03,0x02,0x01,0x03,0x12,0x03,0x19,0x11,0x12,0x0a,
0x0a,0x0a,0x02,0x04,0x04,0x12,0x04,0x1c,0x00,0x21,
0x01,0x0a,0x0a,0x0a,0x03,0x04,0x04,0x01,0x12,0x03,
0x1c,0x08,0x26,0x0a,0x0b,0x0a,0x04,0x04,0x04,0x02,
0x00,0x12,0x03,0x1d,0x02,0x27,0x0a,0x0c,0x0a,0x05,
0x04,0x04,0x02,0x00,0x06,0x12,0x03,0x1d,0x02,0x17,
0x0a,0x0c,0x0a,0x05,0x04,0x04,0x02,0x00,0x01,0x12,
0x03,0x1d,0x18,0x22,0x0a,0x0c,0x0a,0x05,0x04,0x04,
0x02,0x00,0x03,0x12,0x03,0x1d,0x25,0x26,0x0a,0x0b,
0x0a,0x04,0x04,0x04,0x02,0x01,0x12,0x03,0x1e,0x02,
0x28,0x0a,0x0c,0x0a,0x05,0x04,0x04,0x02,0x01,0x06,
0x12,0x03,0x1e,0x02,0x17,0x0a,0x0c,0x0a,0x05,0x04,
0x04,0x02,0x01,0x01,0x12,0x03,0x1e,0x18,0x23,0x0a,
0x0c,0x0a,0x05,0x04,0x04,0x02,0x01,0x03,0x12,0x03,
0x1e,0x26,0x27,0x0a,0x0b,0x0a,0x04,0x04,0x04,0x02,
0x02,0x12,0x03,0x1f,0x02,0x26,0x0a,0x0c,0x0a,0x05,
0x04,0x04,0x02,0x02,0x06,0x12,0x03,0x1f,0x02,0x17,
0x0a,0x0c,0x0a,0x05,0x04,0x04,0x02,0x02,0x01,0x12,
0x03,0x1f,0x18,0x21,0x0a,0x0c,0x0a,0x05,0x04,0x04,
0x02,0x02,0x03,0x12,0x03,0x1f,0x24,0x25,0x0a,0x0b,
0x0a,0x04,0x04,0x04,0x02,0x03,0x12,0x03,0x20,0x02,
0x27,0x0a,0x0c,0x0a,0x05,0x04,0x04,0x02,0x03,0x06,
0x12,0x03,0x20,0x02,0x17,0x0a,0x0c,0x0a,0x05,0x04,
0x04,0x02,0x03,0x01,0x12,0x03,0x20,0x18,0x22,0x0a,
0x0c,0x0a,0x05,0x04,0x04,0x02,0x03,0x03,0x12,0x03,
0x20,0x25,0x26,0x0a,0x0a,0x0a,0x02,0x04,0x05,0x12,
0x04,0x23,0x00,0x28,0x01,0x0a,0x0a,0x0a,0x03,0x04,
0x05,0x01,0x12,0x03,0x23,0x08,0x2a,0x0a,0x0b,0x0a,
0x04,0x04,0x05,0x02,0x00,0x12,0x03,0x24,0x02,0x18,
0x0a,0x0c,0x0a,0x05,0x04,0x05,0x02,0x00,0x05,0x12,
0x03,0x24,0x02,0x08,0x0a,0x0c,0x0a,0x05,0x04,0x05,
0x02,0x00,0x01,0x12,0x03,0x24,0x09,0x13,0x0a,0x0c,
0x0a,0x05,0x04,0x05,0x02,0x00,0x03,0x12,0x03,0x24,
0x16,0x17,0x0a,0x0b,0x0a,0x04,0x04,0x05,0x02,0x01,
0x12,0x03,0x25,0x02,0x19,0x0a,0x0c,0x0a,0x05,0x04,
0x05,0x02,0x01,0x05,0x12,0x03,0x25,0x02,0x08,0x0a,
0x0c,0x0a,0x05,0x04,0x05,0x02,0x01,0x01,0x12,0x03,
0x25,0x09,0x14,0x0a,0x0c,0x0a,0x05,0x04,0x05,0x02,
0x01,0x03,0x12,0x03,0x25,0x17,0x18,0x0a,0x0b,0x0a,
0x04,0x04,0x05,0x02,0x02,0x12,0x03,0x26,0x02,0x17,
0x0a,0x0c,0x0a,0x05,0x04,0x05,0x02,0x02,0x05,0x12,
0x03,0x26,0x02,0x08,0x0a,0x0c,0x0a,0x05,0x04,0x05,
0x02,0x02,0x01,0x12,0x03,0x26,0x09,0x12,0x0a,0x0c,
0x0a,0x05,0x04,0x05,0x02,0x02,0x03,0x12,0x03,0x26,
0x15,0x16,0x0a,0x0b,0x0a,0x04,0x04,0x05,0x02,0x03,
0x12,0x03,0x27,0x02,0x18,0x0a,0x0c,0x0a,0x05,0x04,
0x05,0x02,0x03,0x05,0x12,0x03,0x27,0x02,0x08,0x0a,
0x0c,0x0a,0x05,0x04,0x05,0x02,0x03,0x01,0x12,0x03,
0x27,0x09,0x13,0x0a,0x0c,0x0a,0x05,0x04,0x05,0x02,
0x03,0x03,0x12,0x03,0x27,0x16,0x17,0x0a,0x0a,0x0a,
0x02,0x04,0x06,0x12,0x04,0x2a,0x00,0x2f,0x01,0x0a,
0x0a,0x0a,0x03,0x04,0x06,0x01,0x12,0x03,0x2a,0x08,
0x27,0x0a,0x0b,0x0a,0x04,0x04,0x06,0x02,0x00,0x12,
0x03,0x2b,0x02,0x18,0x0a,0x0c,0x0a,0x05,0x04,0x06,
0x02,0x00,0x05,0x12,0x03,0x2b,0x02,0x08,0x0a,0x0c,
0x0a,0x05,0x04,0x06,0x02,0x00,0x01,0x12,0x03,0x2b,
0x09,0x13,0x0a,0x0c,0x0a,0x05,0x04,0x06,0x02,0x00,
0x03,0x12,0x03,0x2b,0x16,0x17,0x0a,0x0b,0x0a,0x04,
0x04,0x06,0x02,0x01,0x12,0x03,0x2c,0x02,0x19,0x0a,
0x0c,0x0a,0x05,0x04,0x06,0x02,0x01,0x05,0x12,0x03,
0x2c,0x02,0x08,0x0a,0x0c,0x0a,0x05,0x04,0x06,0x02,
0x01,0x01,0x12,0x03,0x2c,0x09,0x14,0x0a,0x0c,0x0a,
0x05,0x04,0x06,0x02,0x01,0x03,0x12,0x03,0x2c,0x17,
0x18,0x0a,0x0b,0x0a,0x04,0x04,0x06,0x02,0x02,0x12,
0x03,0x2d,0x02,0x17,0x0a,0x0c,0x0a,0x05,0x04,0x06,
0x02,0x02,0x05,0x12,0x03,0x2d,0x02,0x08,0x0a,0x0c,
0x0a,0x05,0x04,0x06,0x02,0x02,0x01,0x12,0x03,0x2d,
0x09,0x12,0x0a,0x0c,0x0a,0x05,0x04,0x06,0x02,0x02,
0x03,0x12,0x03,0x2d,0x15,0x16,0x0a,0x0b,0x0a,0x04,
0x04,0x06,0x02,0x03,0x12,0x03,0x2e,0x02,0x18,0x0a,
0x0c,0x0a,0x05,0x04,0x06,0x02,0x03,0x05,0x12,0x03,
0x2e,0x02,0x08,0x0a,0x0c,0x0a,0x05,0x04,0x06,0x02,
0x03,0x01,0x12,0x03,0x2e,0x09,0x13,0x0a,0x0c,0x0a,
0x05,0x04,0x06,0x02,0x03,0x03,0x12,0x03,0x2e,0x16,
0x17,0x0a,0x0a,0x0a,0x02,0x04,0x07,0x12,0x04,0x31,
0x00,0x33,0x01,0x0a,0x0a,0x0a,0x03,0x04,0x07,0x01,
0x12,0x03,0x31,0x08,0x25,0x0a,0x0b,0x0a,0x04,0x04,
0x07,0x02,0x00,0x12,0x03,0x32,0x02,0x2d,0x0a,0x0c,
0x0a,0x05,0x04,0x07,0x02,0x00,0x04,0x12,0x03,0x32,
0x02,0x0a,0x0a,0x0c,0x0a,0x05,0x04,0x07,0x02,0x00,
0x06,0x12,0x03,0x32,0x0b,0x20,0x0a,0x0c,0x0a,0x05,
0x04,0x07,0x02,0x00,0x01,0x12,0x03,0x32,0x21,0x28,
0x0a,0x0c,0x0a,0x05,0x04,0x07,0x02,0x00,0x03,0x12,
0x03,0x32,0x2b,0x2c,0x0a,0x0a,0x0a,0x02,0x04,0x08,
0x12,0x04,0x35,0x00,0x38,0x01,0x0a,0x0a,0x0a,0x03,
0x04,0x08,0x01,0x12,0x03,0x35,0x08,0x24,0x0a,0x0b,
0x0a,0x04,0x04,0x08,0x02,0x00,0x12,0x03,0x36,0x02,
0x16,0x0a,0x0c,0x0a,0x05,0x04,0x08,0x02,0x00,0x05,
0x12,0x03,0x36,0x02,0x08,0x0a,0x0c,0x0a,0x05,0x04,
0x08,0x02,0x00,0x01,0x12,0x03,0x36,0x09,0x11,0x0a,
0x0c,0x0a,0x05,0x04,0x08,0x02,0x00,0x03,0x12,0x03,
0x36,0x14,0x15,0x0a,0x0b,0x0a,0x04,0x04,0x08,0x02,
0x01,0x12,0x03,0x37,0x02,0x1f,0x0a,0x0c,0x0a,0x05,
0x04,0x08,0x02,0x01,0x06,0x12,0x03,0x37,0x02,0x14,
0x0a,0x0c,0x0a,0x05,0x04,0x08,0x02,0x01,0x01,0x12,
0x03,0x37,0x15,0x1a,0x0a,0x0c,0x0a,0x05,0x04,0x08,
0x02,0x01,0x03,0x12,0x03,0x37,0x1d,0x1e,0x0a,0x0a,
0x0a,0x02,0x04,0x09,0x12,0x04,0x3a,0x00,0x3d,0x01,
0x0a,0x0a,0x0a,0x03,0x04,0x09,0x01,0x12,0x03,0x3a,
0x08,0x21,0x0a,0x0b,0x0a,0x04,0x04,0x09,0x02,0x00,
0x12,0x03,0x3b,0x02,0x13,0x0a,0x0c,0x0a,0x05,0x04,
0x09,0x02,0x00,0x05,0x12,0x03,0x3b,0x02,0x08,0x0a,
0x0c,0x0a,0x05,0x04,0x09,0x02,0x00,0x01,0x12,0x03,
0x3b,0x09,0x0e,0x0a,0x0c,0x0a,0x05,0x04,0x09,0x02,
0x00,0x03,0x12,0x03,0x3b,0x11,0x12,0x0a,0x0b,0x0a,
0x04,0x04,0x09,0x02,0x01,0x12,0x03,0x3c,0x02,0x1f,
0x0a,0x0c,0x0a,0x05,0x04,0x09,0x02,0x01,0x06,0x12,
0x03,0x3c,0x02,0x14,0x0a,0x0c,0x0a,0x05,0x04,0x09,
0x02,0x01,0x01,0x12,0x03,0x3c,0x15,0x1a,0x0a,0x0c,
0x0a,0x05,0x04,0x09,0x02,0x01,0x03,0x12,0x03,0x3c,
0x1d,0x1e,0x62,0x06,0x70,0x72,0x6f,0x74,0x6f,0x33,

};
static const char file_name[] = "kinematics.proto";
static const char wpi_proto_ProtobufChassisSpeeds_name[] = "wpi.proto.ProtobufChassisSpeeds";
std::string_view wpi_proto_ProtobufChassisSpeeds::msg_name(void) noexcept { return wpi_proto_ProtobufChassisSpeeds_name; }
pb_filedesc_t wpi_proto_ProtobufChassisSpeeds::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufChassisSpeeds, wpi_proto_ProtobufChassisSpeeds, AUTO)


static const char wpi_proto_ProtobufDifferentialDriveKinematics_name[] = "wpi.proto.ProtobufDifferentialDriveKinematics";
std::string_view wpi_proto_ProtobufDifferentialDriveKinematics::msg_name(void) noexcept { return wpi_proto_ProtobufDifferentialDriveKinematics_name; }
pb_filedesc_t wpi_proto_ProtobufDifferentialDriveKinematics::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufDifferentialDriveKinematics, wpi_proto_ProtobufDifferentialDriveKinematics, AUTO)


static const char wpi_proto_ProtobufDifferentialDriveWheelSpeeds_name[] = "wpi.proto.ProtobufDifferentialDriveWheelSpeeds";
std::string_view wpi_proto_ProtobufDifferentialDriveWheelSpeeds::msg_name(void) noexcept { return wpi_proto_ProtobufDifferentialDriveWheelSpeeds_name; }
pb_filedesc_t wpi_proto_ProtobufDifferentialDriveWheelSpeeds::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufDifferentialDriveWheelSpeeds, wpi_proto_ProtobufDifferentialDriveWheelSpeeds, AUTO)


static const char wpi_proto_ProtobufDifferentialDriveWheelPositions_name[] = "wpi.proto.ProtobufDifferentialDriveWheelPositions";
std::string_view wpi_proto_ProtobufDifferentialDriveWheelPositions::msg_name(void) noexcept { return wpi_proto_ProtobufDifferentialDriveWheelPositions_name; }
pb_filedesc_t wpi_proto_ProtobufDifferentialDriveWheelPositions::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufDifferentialDriveWheelPositions, wpi_proto_ProtobufDifferentialDriveWheelPositions, AUTO)


static const char wpi_proto_ProtobufMecanumDriveKinematics_name[] = "wpi.proto.ProtobufMecanumDriveKinematics";
std::string_view wpi_proto_ProtobufMecanumDriveKinematics::msg_name(void) noexcept { return wpi_proto_ProtobufMecanumDriveKinematics_name; }
pb_filedesc_t wpi_proto_ProtobufMecanumDriveKinematics::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufMecanumDriveKinematics, wpi_proto_ProtobufMecanumDriveKinematics, AUTO)


static const char wpi_proto_ProtobufMecanumDriveWheelPositions_name[] = "wpi.proto.ProtobufMecanumDriveWheelPositions";
std::string_view wpi_proto_ProtobufMecanumDriveWheelPositions::msg_name(void) noexcept { return wpi_proto_ProtobufMecanumDriveWheelPositions_name; }
pb_filedesc_t wpi_proto_ProtobufMecanumDriveWheelPositions::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufMecanumDriveWheelPositions, wpi_proto_ProtobufMecanumDriveWheelPositions, AUTO)


static const char wpi_proto_ProtobufMecanumDriveWheelSpeeds_name[] = "wpi.proto.ProtobufMecanumDriveWheelSpeeds";
std::string_view wpi_proto_ProtobufMecanumDriveWheelSpeeds::msg_name(void) noexcept { return wpi_proto_ProtobufMecanumDriveWheelSpeeds_name; }
pb_filedesc_t wpi_proto_ProtobufMecanumDriveWheelSpeeds::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufMecanumDriveWheelSpeeds, wpi_proto_ProtobufMecanumDriveWheelSpeeds, AUTO)


static const char wpi_proto_ProtobufSwerveDriveKinematics_name[] = "wpi.proto.ProtobufSwerveDriveKinematics";
std::string_view wpi_proto_ProtobufSwerveDriveKinematics::msg_name(void) noexcept { return wpi_proto_ProtobufSwerveDriveKinematics_name; }
pb_filedesc_t wpi_proto_ProtobufSwerveDriveKinematics::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufSwerveDriveKinematics, wpi_proto_ProtobufSwerveDriveKinematics, AUTO)


static const char wpi_proto_ProtobufSwerveModulePosition_name[] = "wpi.proto.ProtobufSwerveModulePosition";
std::string_view wpi_proto_ProtobufSwerveModulePosition::msg_name(void) noexcept { return wpi_proto_ProtobufSwerveModulePosition_name; }
pb_filedesc_t wpi_proto_ProtobufSwerveModulePosition::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufSwerveModulePosition, wpi_proto_ProtobufSwerveModulePosition, AUTO)


static const char wpi_proto_ProtobufSwerveModuleState_name[] = "wpi.proto.ProtobufSwerveModuleState";
std::string_view wpi_proto_ProtobufSwerveModuleState::msg_name(void) noexcept { return wpi_proto_ProtobufSwerveModuleState_name; }
pb_filedesc_t wpi_proto_ProtobufSwerveModuleState::file_descriptor(void) noexcept { return {::file_name, ::file_descriptor}; }
PB_BIND(wpi_proto_ProtobufSwerveModuleState, wpi_proto_ProtobufSwerveModuleState, AUTO)



#ifndef PB_CONVERT_DOUBLE_FLOAT
/* On some platforms (such as AVR), double is really float.
 * To be able to encode/decode double on these platforms, you need.
 * to define PB_CONVERT_DOUBLE_FLOAT in pb.h or compiler command line.
 */
PB_STATIC_ASSERT(sizeof(double) == 8, DOUBLE_MUST_BE_8_BYTES)
#endif

