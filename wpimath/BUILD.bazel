load("@allwpilib_pip_deps//:requirements.bzl", "requirement")
load("@aspect_bazel_lib//lib:write_source_files.bzl", "write_source_files")
load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")
load("@rules_java//java:defs.bzl", "java_binary")
load("@rules_pkg//pkg:zip.bzl", "pkg_zip")
load("@rules_python//python:defs.bzl", "py_binary")
load("//shared/bazel/rules:cc_rules.bzl", "third_party_cc_lib_helper", "wpilib_cc_library", "wpilib_cc_shared_library", "wpilib_cc_static_library")
load("//shared/bazel/rules:java_rules.bzl", "wpilib_java_junit5_test")
load("//shared/bazel/rules:jni_rules.bzl", "wpilib_jni_cc_library", "wpilib_jni_java_library")
load("//shared/bazel/rules:packaging.bzl", "pkg_java_files")
load("//wpimath:generate.bzl", "generate_wpimath")

filegroup(
    name = "templates",
    srcs = glob(["src/generate/main/java/*.jinja"]),
)

filegroup(
    name = "proto_files",
    srcs = glob(["src/main/proto/**/*.proto"]),
)

py_binary(
    name = "generate_nanopb",
    srcs = ["generate_nanopb.py"],
    target_compatible_with = select({
        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio": ["@platforms//:incompatible"],
        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)

py_binary(
    name = "generate_numbers",
    srcs = ["generate_numbers.py"],
    data = [":templates"],
    target_compatible_with = select({
        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio": ["@platforms//:incompatible"],
        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [requirement("jinja2")],
)

py_binary(
    name = "generate_quickbuf",
    srcs = ["generate_quickbuf.py"],
    target_compatible_with = select({
        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio": ["@platforms//:incompatible"],
        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)

py_binary(
    name = "generate_wpimath_py",
    srcs = ["generate_wpimath.py"],
    main = "generate_wpimath.py",
    target_compatible_with = select({
        "@rules_bzlmodrio_toolchains//constraints/is_roborio:roborio": ["@platforms//:incompatible"],
        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
    deps = [
        ":generate_nanopb",
        ":generate_numbers",
        ":generate_quickbuf",
    ],
)

generate_wpimath(
    name = "generate_wpimath",
    tags = ["pregeneration"],
)

write_source_files(
    name = "write_wpimath",
    files = {
        "src/generated": ":generate_wpimath",
    },
    suggested_update_target = "//:write_all",
    tags = ["pregeneration"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "generated_java",
    srcs = glob(["src/generated/main/java/**/*.java"]),
)

third_party_cc_lib_helper(
    name = "eigen",
    include_root = "src/main/native/thirdparty/eigen/include",
)

third_party_cc_lib_helper(
    name = "gcem",
    include_root = "src/main/native/thirdparty/gcem/include",
)

third_party_cc_lib_helper(
    name = "sleipnir",
    include_root = "src/main/native/thirdparty/sleipnir/include",
    src_root = "src/main/native/thirdparty/sleipnir/src",
)

cc_library(
    name = "nanopb-generated-headers",
    hdrs = glob(["src/generated/main/native/cpp/**/*.h"]),
    includes = ["src/generated/main/native/cpp"],
    strip_include_prefix = "src/generated/main/native/cpp",
)

wpilib_cc_library(
    name = "wpimath",
    srcs = glob(
        [
            "src/main/native/cpp/**",
            "src/generated/main/native/cpp/**/*.cpp",
        ],
        exclude = ["src/main/native/cpp/jni/**"],
    ),
    hdrs = glob(["src/main/native/include/**"]),
    extra_src_pkg_files = [
        ":wpimath-java-jni-hdrs-pkg",
    ],
    includes = [
        "src/main/native/include",
        "src/main/native/thirdparty/sleipnir/src",
    ],
    local_defines = [
        "WPILIB_EXPORTS",
        "SLEIPNIR_EXPORTS",
    ],
    strip_include_prefix = "src/main/native/include",
    third_party_header_only_libraries = [
        ":eigen",
        ":gcem",
    ],
    third_party_libraries = [
        ":sleipnir",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":nanopb-generated-headers",
        "//wpiutil",
    ],
)

wpilib_cc_shared_library(
    name = "shared/wpimath",
    auto_export_windows_symbols = False,
    dynamic_deps = [
        "//wpiutil:shared/wpiutil",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":wpimath",
    ],
)

wpilib_cc_static_library(
    name = "static/wpimath",
    static_deps = [
        "//wpiutil:static/wpiutil",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":wpimath",
    ],
)

wpilib_jni_cc_library(
    name = "wpimathjni",
    srcs = glob(["src/main/native/cpp/jni/**"]),
    java_dep = ":wpimath-java",
    visibility = ["//visibility:public"],
    deps = [
        ":wpimath",
    ],
)

wpilib_cc_shared_library(
    name = "shared/wpimathjni",
    auto_export_windows_symbols = False,
    dynamic_deps = [
        ":shared/wpimath",
        "//wpiutil:shared/wpiutil",
    ],
    visibility = ["//visibility:public"],
    deps = [":wpimathjni"],
)

wpilib_jni_java_library(
    name = "wpimath-java",
    srcs = [":generated_java"] + glob(["src/main/java/**/*.java"]),
    native_libs = [":wpimathjni"],
    resource_strip_prefix = "wpimath/src/main/proto",
    resources = glob(["src/main/proto/**"]),
    visibility = ["//visibility:public"],
    deps = [
        "//wpiunits:wpiunits-java",
        "//wpiutil:wpiutil-java",
        "@maven//:com_fasterxml_jackson_core_jackson_annotations",
        "@maven//:com_fasterxml_jackson_core_jackson_core",
        "@maven//:com_fasterxml_jackson_core_jackson_databind",
        "@maven//:org_ejml_ejml_core",
        "@maven//:org_ejml_ejml_ddense",
        "@maven//:org_ejml_ejml_simple",
        "@maven//:us_hebi_quickbuf_quickbuf_runtime",
    ],
)

pkg_java_files(name = "wpimath-java-srcs")

pkg_zip(
    name = "libwpimath-java-sources",
    srcs = [":wpimath-java-srcs"],
    out = "libwpimath-java-sources.jar",
)

cc_library(
    name = "test_headers",
    hdrs = glob([
        "src/test/native/include/**",
    ]),
    strip_include_prefix = "src/test/native/include",
)

cc_test(
    name = "wpimath-cpp-test",
    size = "small",
    srcs = glob([
        "src/test/native/cpp/**/*.cpp",
        "src/test/native/cpp/**/*.h",
    ]),
    tags = [
        "no-bullseye",
        "no-raspi",
    ],
    deps = [
        ":test_headers",
        ":wpimath",
        "//thirdparty/googletest",
    ],
)

wpilib_java_junit5_test(
    name = "wpimath-java-test",
    srcs = glob(["src/test/java/**/*.java"]),
    deps = [
        ":wpimath-java",
        "//wpiunits:wpiunits-java",
        "//wpiutil:wpiutil-java",
        "@maven//:org_ejml_ejml_core",
        "@maven//:org_ejml_ejml_simple",
        "@maven//:us_hebi_quickbuf_quickbuf_runtime",
    ],
)

cc_binary(
    name = "DevMain-Cpp",
    srcs = ["src/dev/native/cpp/main.cpp"],
    deps = [
        ":wpimath",
    ],
)

java_binary(
    name = "DevMain-Java",
    srcs = ["src/dev/java/edu/wpi/first/math/DevMain.java"],
    main_class = "edu.wpi.first.math.DevMain",
    deps = [
        ":wpimath-java",
    ],
)

py_binary(
    name = "ExponentialProfileModel",
    srcs = ["algorithms/ExponentialProfileModel.py"],
    target_compatible_with = select({
        "@rules_bzlmodrio_toolchains//constraints/is_systemcore:systemcore": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)
